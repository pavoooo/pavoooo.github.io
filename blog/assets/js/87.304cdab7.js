(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{273:function(s,a,e){"use strict";e.r(a);var n=e(0),t=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("div",{staticClass:"content"},[e("h1",[s._v("babel配置文件")]),s._v(" "),e("p",[e("code",[s._v("babel")]),s._v("的配置文件有两种："),e("strong",[s._v("项目范围的配置")]),s._v("和"),e("strong",[s._v("相关文件的配置")]),s._v("。")]),s._v(" "),e("h2",{attrs:{id:"项目范围的配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目范围的配置","aria-hidden":"true"}},[s._v("#")]),s._v(" 项目范围的配置")]),s._v(" "),e("blockquote",[e("p",[s._v("项目范围的配置我们也可以称为全局配置")])]),s._v(" "),e("p",[e("code",[s._v("babel")]),s._v("从"),e("code",[s._v("v7")]),s._v("版本开始引入了根目录("),e("code",[s._v("root")]),s._v(")的概念。默认是当前的工作目录，对于项目范围的配置，"),e("code",[s._v("babel")]),s._v("会自动搜索相对于此根目录下面的"),e("code",[s._v("babel.config.js")]),s._v("文件。一般而言，项目范围的配置一般就是指"),e("code",[s._v("babel.config.js")]),s._v("。当然，你也可以通过"),e("code",[s._v("configFile")]),s._v("选项明确指定你项目范围的配置文件的路径。也可以将"),e("code",[s._v("configFile")]),s._v("选项设置为"),e("code",[s._v("false")]),s._v("来禁用项目范围的配置。")]),s._v(" "),e("p",[s._v("项目范围的配置对项目中任何模块都生效，包括"),e("code",[s._v("node_modules")]),s._v("中的模块。如果你的项目是一个"),e("code",[s._v("momorepo")]),s._v("项目，它同样也会对各个子仓库中的模块生效。当然，你可以通过在配置中通过"),e("code",[s._v("exclude")]),s._v("等选项将其排除。")]),s._v(" "),e("h3",{attrs:{id:"相关文件的配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关文件的配置","aria-hidden":"true"}},[s._v("#")]),s._v(" 相关文件的配置")]),s._v(" "),e("blockquote",[e("p",[s._v("相关文件的配置你也可以理解成局部配置，它只对某个单独的包起作用")])]),s._v(" "),e("p",[s._v("相关文件的配置有很多种类型，这些类型在"),e("code",[s._v("babel6")]),s._v("的时候都已经被支持了。主要有如下几种：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v(".babelrc")]),s._v("文件和"),e("code",[s._v(".babelrc.js")]),s._v("文件")]),s._v(" "),e("li",[e("code",[s._v("package.json")]),s._v("文件中的"),e("code",[s._v("babel")]),s._v("属性")])]),s._v(" "),e("p",[s._v("不管哪一种相关文件的配置类型，它们的查找过程是相同的。"),e("strong",[s._v("babel会从当前正在编译的filename所在的目录开始查找，如果当前编译的filename不在babelrcRoots的设置内，将会被跳过。一旦找到package.json文件就停止查找，因此，相对配置仅适用于单个package的项目。")])]),s._v(" "),e("blockquote",[e("p",[s._v("项目范围的配置和相关文件的配置可以同时存在。如果两者都符合"),e("code",[s._v("babel")]),s._v("的查找规则，那么两份配置文件会被合并成一份最终的配置用于"),e("code",[s._v("babel")]),s._v("的编译。")])]),s._v(" "),e("h3",{attrs:{id:"项目实战"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目实战","aria-hidden":"true"}},[s._v("#")]),s._v(" 项目实战")]),s._v(" "),e("p",[s._v("下面我们通过真实的项目来看一下"),e("code",[s._v("babel")]),s._v("是怎么加载配置文件的。假设我们的项目结构如下：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("├── package.json\n├── package1\n│   └── package.json\n└── package2\n    └── package.json\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("ul",[e("li",[e("strong",[s._v("实验一")])])]),s._v(" "),e("p",[s._v("首先在根目录创建一个"),e("code",[s._v("babel.config.js")]),s._v("和"),e("code",[s._v("index.js")]),s._v("，并在"),e("code",[s._v("package1")]),s._v("和"),e("code",[s._v("package2")]),s._v("中分别新建"),e("code",[s._v("index.js")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),e("span",{attrs:{class:"token string"}},[s._v("'[1, 2, 3].map(v => v + 1)'")]),s._v(" "),e("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" index.js "),e("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),e("span",{attrs:{class:"token string"}},[s._v("'[1, 2, 3].map(v => v + 1)'")]),s._v(" "),e("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" package1/index.js "),e("span",{attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),e("span",{attrs:{class:"token string"}},[s._v("'[1, 2, 3].map(v => v + 1)'")]),s._v(" "),e("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" package2/index.js\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("三个新建的"),e("code",[s._v("index.js")]),s._v("文件内容相同，如下")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{attrs:{class:"token number"}},[s._v("1")]),e("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{attrs:{class:"token number"}},[s._v("2")]),e("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{attrs:{class:"token number"}},[s._v("3")]),e("span",{attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{attrs:{class:"token function"}},[s._v("map")]),e("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("v "),e("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" v "),e("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),e("span",{attrs:{class:"token number"}},[s._v("1")]),e("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("code",[s._v("babel.config.js")]),s._v("配置文件内容如下")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("module"),e("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),e("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    plugins"),e("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),e("span",{attrs:{class:"token string"}},[s._v("'@babel/plugin-transform-arrow-functions'")]),s._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    exclude"),e("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{attrs:{class:"token string"}},[s._v("'babel.config.js'")]),e("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    ignore"),e("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),e("span",{attrs:{class:"token string"}},[s._v("'node_modules'")]),s._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("然后运行命令"),e("code",[s._v("babel . --ignore 'babel.config.js' --out-dir lib")]),s._v("进行编译。")]),s._v(" "),e("blockquote",[e("p",[s._v("在"),e("code",[s._v("package.json")]),s._v("中新增"),e("code",[s._v("compile")]),s._v("命令，"),e("code",[s._v("babel . --ignore 'babel.config.js' --out-dir lib")])])]),s._v(" "),e("p",[e("strong",[s._v("我们期望三个"),e("code",[s._v("index.js")]),s._v("文件中的箭头函数都能够正常编译成普通函数，从编译结果能看到，符合预期。")])]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("实验二")])])]),s._v(" "),e("p",[s._v("在"),e("code",[s._v("index.js")]),s._v("和"),e("code",[s._v("package1/index.js")]),s._v("文件中添加如下代码")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a "),e("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("然后在根目录下新建"),e("code",[s._v(".babelrc")]),s._v("配置文件，配置如下")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{attrs:{class:"token string"}},[s._v('"plugins"')]),e("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),e("span",{attrs:{class:"token string"}},[s._v('"@babel/plugin-transform-block-scoping"')]),s._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("在根目录下运行"),e("code",[s._v("npm run compile")]),s._v("进行编译")]),s._v(" "),e("p",[e("strong",[s._v("我们期望"),e("code",[s._v("index.js")]),s._v("和"),e("code",[s._v("package1/index.js")]),s._v("文件中的"),e("code",[s._v("let")]),s._v("声明编译成"),e("code",[s._v("var")]),s._v("声明，从编译结果能看到只有"),e("code",[s._v("index.js")]),s._v("文件中的"),e("code",[s._v("let")]),s._v("声明被编译成了"),e("code",[s._v("var")]),s._v("声明，而"),e("code",[s._v("package1/index.js")]),s._v("文件中的"),e("code",[s._v("let")]),s._v("声明并没有被编译。")])]),s._v(" "),e("p",[s._v("根据上面这个实验，我们能得出一个结论："),e("strong",[e("code",[s._v("babel")]),s._v("在编译的时候会同时读取根目录下"),e("code",[s._v("babel.config.js")]),s._v("和"),e("code",[s._v(".babelrc")]),s._v("配置文件中的相关配置，但是并不能改变它们的作用范围，"),e("code",[s._v("babel.config.js")]),s._v("会对项目中的所有文件起作用，而"),e("code",[s._v(".babelrc")]),s._v("同样只会当前"),e("code",[s._v("package")]),s._v("起作用，并不会对子"),e("code",[s._v("package")]),s._v("起作用")]),s._v("。")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("实验三")])])]),s._v(" "),e("p",[s._v("将根目录下的"),e("code",[s._v(".babelrc")]),s._v("移动到"),e("code",[s._v("package1")]),s._v("目录下")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token function"}},[s._v("mv")]),s._v(" .babelrc ./package1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("然后在根目录下运行"),e("code",[s._v("npm run compile")]),s._v("命令")]),s._v(" "),e("p",[e("strong",[s._v("我们期望"),e("code",[s._v("package1/index.js")]),s._v("文件中的"),e("code",[s._v("let")]),s._v("声明被编译成"),e("code",[s._v("var")]),s._v("声明，从编译结果来看，虽然"),e("code",[s._v(".babelrc")]),s._v("文件已经在"),e("code",[s._v("package1")]),s._v("下了，但是其配置仍然没有作用域"),e("code",[s._v("package1/index.js")]),s._v("文件，这是为什么呢？")])]),s._v(" "),e("p",[e("strong",[s._v("这是因为如果全局配置中没有配置"),e("code",[s._v("babelrcRoots")]),s._v("字段，那么"),e("code",[s._v("babel")]),s._v("默认情况下是不会加载任何子"),e("code",[s._v("package")]),s._v("中的相对配置(如"),e("code",[s._v(".babelrc")]),s._v("文件)。所以，如果你想让"),e("code",[s._v("babel")]),s._v("读取子"),e("code",[s._v("package")]),s._v("中的相对配置，请在"),e("code",[s._v("babelrcRoots")]),s._v("字段中明确配置。")])]),s._v(" "),e("p",[s._v("在"),e("code",[s._v("babel.config.js")]),s._v("中加入"),e("code",[s._v("babelrcRoots")]),s._v("字段的配置")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("module"),e("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),e("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    babelrcRoots"),e("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),e("span",{attrs:{class:"token string"}},[s._v("'.'")]),e("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{attrs:{class:"token comment"}},[s._v("// 不要忘记添加根目录")]),s._v("\n        "),e("span",{attrs:{class:"token string"}},[s._v("'./package1'")]),s._v("\n    "),e("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("blockquote",[e("p",[s._v("同样的道理，如果你想让"),e("code",[s._v("babel")]),s._v("加载"),e("code",[s._v("package2")]),s._v("中的相对配置，也需要在"),e("code",[s._v("babelrcRoots")]),s._v("中明确配置")])]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("实验四")])])]),s._v(" "),e("p",[s._v("进入到"),e("code",[s._v("package1")]),s._v("目录下")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token function"}},[s._v("cd")]),s._v(" package1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("然后执行"),e("code",[s._v("npx babel index.js --out-dir lib")]),s._v("命令。")]),s._v(" "),e("p",[e("strong",[s._v("我们期望"),e("code",[s._v("package1/index.js")]),s._v("中的箭头函数语法和"),e("code",[s._v("let")]),s._v("声明都能被编译转换。从编译结果来看，只有"),e("code",[s._v("let")]),s._v("声明的语法被成功编译转换，而箭头函数的语法却没有被编译。转换箭头函数的"),e("code",[s._v("plugin")]),s._v("配置我们写在全局配置"),e("code",[s._v("babel.config.js")]),s._v("中。从结果来看，这段配置貌似没有对"),e("code",[s._v("package1/index.js")]),s._v("文件生效。这是为什么？")])]),s._v(" "),e("p",[s._v("这是因为"),e("strong",[s._v("babel默认将当前执行的目录作为根目录，所以它会在"),e("code",[s._v("package1")]),s._v("中查找"),e("code",[s._v("babel.config.js")]),s._v("文件，如果没有找到，默认情况下它就会认为没有全局相关的配置。而在我们这个例子中，我们其实是希望"),e("code",[s._v("babel")]),s._v("能够读取到项目根目录下的"),e("code",[s._v("babel.config.js")]),s._v("文件的。幸好，"),e("code",[s._v("babel7")]),s._v("提供了"),e("code",[s._v("rootMode")]),s._v("选项，可以将它设置为"),e("code",[s._v("upward")]),s._v("，这样"),e("code",[s._v("babel")]),s._v("就会自动向上寻找配置，并确定项目根目录的位置。")])]),s._v(" "),e("p",[s._v("所以，将我们的编译命令修改如下"),e("code",[s._v("npx babel --root-mode 'upward' index.js --out-dir lib")]),s._v("。编译结果符合预期。")]),s._v(" "),e("div",{staticClass:"danger custom-block"},[e("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),e("p",[e("code",[s._v("rootMode")]),s._v("不能写在"),e("code",[s._v(".babelrc")]),s._v("配置中")])]),s._v(" "),e("p",[s._v("从上面几个实验我们大概知道了"),e("code",[s._v("babel")]),s._v("加载配置文件的基本逻辑了，这里简单总结一下。")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("全局配置")])]),s._v(" "),e("ul",[e("li",[e("code",[s._v("babel")]),s._v("默认读取根目录下的"),e("code",[s._v("babel.config.js")]),s._v("文件作为全局配置，你可以通过"),e("code",[s._v("configFile")]),s._v("指定全局配置文件的路径。如果你想让"),e("code",[s._v("babel")]),s._v("加载各个子目录中的相对配置，请在全局配置中配置相应的"),e("code",[s._v("babelrcRoots")]),s._v("字段")])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("相对配置")])]),s._v(" "),e("ul",[e("li",[e("code",[s._v("babel")]),s._v("会去搜索子目录中相对配置文件，前提是"),e("code",[s._v("babelrcRoots")]),s._v("已经做了相应的配置。如果你想在子目录中使用全局配置，请指定"),e("code",[s._v("--root-mode")]),s._v("。")])])])])])}],!1,null,null,null);t.options.__file="babel配置文件.md";a.default=t.exports}}]);