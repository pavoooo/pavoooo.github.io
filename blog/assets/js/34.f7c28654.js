(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{199:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",[s._v("缓存那些事")]),s._v(" "),a("p",[s._v("作为一名"),a("code",[s._v("web")]),s._v("开发者，"),a("code",[s._v("缓存")]),s._v("是我们提升性能最常用的手段之一。"),a("code",[s._v("缓存")]),s._v("机制可以用在"),a("code",[s._v("web")]),s._v("架构中的很多地方。下图是最简单的一个"),a("code",[s._v("web")]),s._v("架构。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/cache1.png",alt:"cache"}})]),s._v(" "),a("p",[s._v("客户端向服务器发起请求，服务器请求数据库，处理之后将数据返回给客户端。在这个简单的流程中我们可以做很多有效的缓存方式。比如，端(客户端和服务器端)的缓存一般都会采用"),a("code",[s._v("空间换时间")]),s._v("的方式--将数据保存在内存中，在进行操作之前检查内存中是否有对应的数据，如果没有，再向后续服务请求。一般这个缓存都不是持久的。客户端和服务器之间的通信一般都是通过"),a("code",[s._v("http")]),s._v("协议进行的。"),a("code",[s._v("http")]),s._v("缓存也是我们最常见的缓存策略，服务器可以通过不同的响应头来控制前端缓存数据的行为。这种方式很有效，但对于前端开发人员来说可控性比较低。为了能够让前端开发者自己能够控制资源的缓存策略，我们可以使用"),a("code",[s._v("Service Worker")]),s._v("，后面会详细讲述这种方式。后端在请求数据库的时候，也是有很多种方式来控制缓存的，比如使用"),a("code",[s._v("redis")]),s._v("等缓存数据库。")]),s._v(" "),a("h2",{attrs:{id:"端的缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#端的缓存","aria-hidden":"true"}},[s._v("#")]),s._v(" 端的缓存")]),s._v(" "),a("p",[s._v("\b"),a("code",[s._v("端的缓存")]),s._v("就是说开发者利用程序将数据缓存在自己的端内。比如，在前端开发的时候，\b可以通过一个变量来保存我们的缓存数据，这其实就是将数据缓存在我们的内存中。所以，我们可能会写出下面的代码。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{attrs:{class:"token function-variable function"}},[s._v("cached")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" fn "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" hit "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" Object"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("create")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("function")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" hit"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("str"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hit"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("str"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("fn")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("基本思路就是\b"),a("strong",[s._v("在进行某项操作之前，先去查找保存缓存数据的变量中是否存在对应的数据。如果有，就直接从变量中获取。否则，就进行后续的操作，并将结果保存到缓存变量中")]),s._v("。这种方法也是我们的缓存策略之一，但是\b有一个显著的缺点就是"),a("code",[s._v("不能持久化")]),s._v("。缓存变量会随着程序的销毁而清空，比如，页面刷新后，我们还必须得重新构建我们的缓存变量。")]),s._v(" "),a("p",[s._v("\b当然，我们可以结合浏览器赋予我们的能力进行缓存持久化的操作。比如使用"),a("code",[s._v("localStorage")]),s._v("，"),a("code",[s._v("cookie")]),s._v("，"),a("code",[s._v("IndexedDB")]),s._v("等。但是，这些方法或多或少的会有些缺点，比如"),a("code",[s._v("localStorage")]),s._v("和"),a("code",[s._v("cookie")]),s._v("对于保存数据的大小有限，而且"),a("code",[s._v("cookie")]),s._v("也会增加"),a("code",[s._v("http")]),s._v("请求头的\b体积。"),a("code",[s._v("IndexedDB")]),s._v("则因为兼容性的问题而没有被广泛使用。")]),s._v(" "),a("p",[s._v("所以，这种缓存策略一般是在操作频繁，页面不经常刷新的情况下使用。比如"),a("code",[s._v("ajax")]),s._v("请求等。")]),s._v(" "),a("h2",{attrs:{id:"http缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http缓存","aria-hidden":"true"}},[s._v("#")]),s._v(" http缓存")]),s._v(" "),a("p",[s._v("客户端和服务器的通信一般都是基于"),a("code",[s._v("http")]),s._v("协议的。服务器可以通过"),a("code",[s._v("http")]),s._v("响应头来控制\b客户端对资源的缓存行为。客户端会根据请求保存着资源的副本，比如"),a("code",[s._v("html")]),s._v("，"),a("code",[s._v("image")]),s._v("，"),a("code",[s._v("js")]),s._v("和"),a("code",[s._v("css")]),s._v("等静态资源。当下一个请求发送的时候，浏览器会根据请求的url来判断资源是否被缓存，如果缓存有效，就直接从本地保存的资源来响应请求，而不需要再向服务器发起额外的请求。所以，"),a("code",[s._v("http")]),s._v("的缓存一般有如下两个好处：")]),s._v(" "),a("ul",[a("li",[s._v("\b减少\b请求时间，提升响应速度")]),s._v(" "),a("li",[s._v("减少网络带宽消耗，降低服务器负载的压力")])]),s._v(" "),a("p",[s._v("下面，就好好的\b看一下"),a("code",[s._v("服务器是如何通过http来控制缓存的行为")]),s._v("。")]),s._v(" "),a("p",[s._v("首先，来看第一张图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/cache2.png",alt:"cache"}})]),s._v(" "),a("p",[s._v("这幅图很好理解，当我们第一次向服务器请求一个资源的时候。客户端是没有保存过这个资源的副本的，也就是不存在缓存的\b内容。此时就会向服务器发送请求，服务器接收到请求后并响应，通过\b一些响应头部"),a("code",[s._v("cache-control")]),s._v("，"),a("code",[s._v("expires")]),s._v("，"),a("code",[s._v("last-modified")]),s._v("，"),a("code",[s._v("etag")]),s._v("来控制浏览器下次对相同资源的请求的时候采取的缓存策略。")]),s._v(" "),a("p",[s._v("这里先介绍一下"),a("code",[s._v("http")]),s._v("的缓存策略。"),a("code",[s._v("http")]),s._v("缓存分为两种："),a("strong",[s._v("强缓存")]),s._v("和"),a("strong",[s._v("协商缓存")]),s._v("。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("强缓存")]),s._v("：浏览器不会向服务器发送请求，直接从缓存中获取资源")]),s._v(" "),a("li",[a("strong",[s._v("协商缓存")]),s._v("：浏览器会向服务器发送请求，由服务器来控制是否使用缓存。")])]),s._v(" "),a("p",[s._v("控制"),a("code",[s._v("强缓存")]),s._v("的头部有两个"),a("code",[s._v("cache-control")]),s._v("和"),a("code",[s._v("expires")]),s._v("。当两者都存在的时候"),a("code",[s._v("cache-control")]),s._v("的优先级高于"),a("code",[s._v("expires")]),s._v("。")]),s._v(" "),a("p",[s._v("控制"),a("code",[s._v("协商缓存")]),s._v("的头部也是有两个"),a("code",[s._v("last-modified")]),s._v("和"),a("code",[s._v("etag")]),s._v("当两者都存在的时候"),a("code",[s._v("etag")]),s._v("的优先级高于"),a("code",[s._v("last-modified")]),s._v("。")]),s._v(" "),a("p",[s._v("了解了控制缓存的头部字段后，就需要知道这些头部是怎么来控制缓存的。首先介绍一下"),a("code",[s._v("强缓存")]),s._v(" 头部控制缓存的策略。")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("expires")]),s._v("：该响应头部是"),a("code",[s._v("HTTP1.0")]),s._v("规范中定义的，它的值是一个\b表示绝对时间的"),a("code",[s._v("GMT")]),s._v("格式的字符串。比如"),a("code",[s._v("Sat, 08 Sep 2018 05:07:04 GMT")]),s._v("。如果请求的发送时间在"),a("code",[s._v("expires")]),s._v("设定的时间之前，就直接从缓存中获取数据，否则\b就表示缓存已经过期，需要向服务器发送请求获取最新的资源。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("cache-control")]),s._v("：这个响应头部是"),a("code",[s._v("HTTP1.1")]),s._v("规范设定的。它可以取五个值"),a("code",[s._v("max-age")]),s._v("，"),a("code",[s._v("no-store")]),s._v("，"),a("code",[s._v("no-cache")]),s._v("，"),a("code",[s._v("public")]),s._v("，"),a("code",[s._v("private")]),s._v("。通过设置"),a("code",[s._v("max-age")]),s._v("的值，就能控制资源的缓存。指定"),a("code",[s._v("cache-control: max-age=number")]),s._v("。它是一个相对值，利用这个值设定的时间和number可以计算出一个绝对值。这个绝对值就是资源的过期时间。如果请求时间在过期时间之前，就表示缓存有效，直接从缓存中获取数据。否则，同样需要向服务器发起请求。除了"),a("code",[s._v("max-age")]),s._v("，"),a("code",[s._v("cache-control")]),s._v("的其它字段也是和缓存有关的。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("no-store")]),s._v("：禁止浏览器使用任何缓存。每次用户请求资源的时候，都必须向服务器发起请求获取最新的资源。")]),s._v(" "),a("li",[a("code",[s._v("no-cache")]),s._v("：禁止浏览器使用"),a("code",[s._v("强缓存")]),s._v("。每次用户请求资源的时候，通过协商缓存来判断\b缓存的有效性。")]),s._v(" "),a("li",[a("code",[s._v("public")]),s._v("：允许所有用户进行缓存。比如终端用户和"),a("code",[s._v("CDN")]),s._v("等。")]),s._v(" "),a("li",[a("code",[s._v("private")]),s._v("：只能允许终端用户进行缓存。")])])])]),s._v(" "),a("p",[s._v("以上就是"),a("code",[s._v("强缓存")]),s._v("相关响应头的行为。下面再了解一下"),a("code",[s._v("协商缓存")]),s._v("的基本行为。")]),s._v(" "),a("p",[a("code",[s._v("协商缓存")]),s._v("不仅仅和服务器响应相关，还和客户端的请求相关联。因为在服务器设定了控制协商缓存的响应头后，只有在客户端每次请求的时候带上服务器所设定的值，服务器才能正确的判断出这个资源的有效性。一般来说，主要有如下两组："),a("code",[s._v("etag")]),s._v("和"),a("code",[s._v("if-None-Match")]),s._v("，"),a("code",[s._v("last-modified")]),s._v("和"),a("code",[s._v("if-Modified-Since")]),s._v("\b。其中"),a("code",[s._v("etag")]),s._v("和"),a("code",[s._v("last-modified")]),s._v("是服务器在响应头中设定的。而"),a("code",[s._v("if-None-Match")]),s._v("和"),a("code",[s._v("is-Modified-Since")]),s._v("是http的请求头中指定。")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("etag")]),s._v("/"),a("code",[s._v("if-None-Match")]),s._v("："),a("code",[s._v("etag")]),s._v("是服务器端生成的\b每个资源的标识符，这个标识符是唯一的。每当资源改变的时候，这个值就会发生改变。当服务器接收客户端发送过来的请求的时候，会通过"),a("code",[s._v("http")]),s._v("请求头中的"),a("code",[s._v("if-None-Match")]),s._v("字段获取上次响应的时候设定的"),a("code",[s._v("etag")]),s._v("。服务器会根据请求确定资源最新的"),a("code",[s._v("etag")]),s._v("值，如果"),a("code",[s._v("etag")]),s._v("的值没有发生变化，则返回"),a("code",[s._v("304 Not Modified")]),s._v("响应，同时，这次新生成的"),a("code",[s._v("etag")]),s._v("也会随着响应发给客户端。如果"),a("code",[s._v("etag")]),s._v("的值发生了变化，则服务器会发送给客户端最新的资源和"),a("code",[s._v("etag")]),s._v("，这时的响应码就是"),a("code",[s._v("200 Success")]),s._v("。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("last-modified")]),s._v("/"),a("code",[s._v("if-None-Match")]),s._v("：这两个都是"),a("code",[s._v("GMT")]),s._v("\b格式的时间字符串。其中"),a("code",[s._v("last-modified")]),s._v("表示的就是资源在服务器上最后一次的编辑时间。具体的校验过程如下：")]),s._v(" "),a("ul",[a("li",[s._v("当客户端第一次向服务器发起请求的时候，服务器在响应资源的同时，会在响应头中设置"),a("code",[s._v("last-modified")]),s._v("的值。")]),s._v(" "),a("li",[s._v("当客户端再次请求这个资源的时候，就会在请求投中加上"),a("code",[s._v("if-Modified-Since")]),s._v("。这个字段的值就是服务器上次响应的时候设置的"),a("code",[s._v("last-modified")]),s._v("值。")]),s._v(" "),a("li",[s._v("服务器再次接收到\b请求的时候，\b会根据请求头中的"),a("code",[s._v("if-Modified-Since")]),s._v("的值和资源最后的编辑时间作对比。如果没有发生变化，表示资源没有发生过更新，返回"),a("code",[s._v("304 Not Modified")]),s._v("响应，但不会发送任何资源，响应头中也不会设置"),a("code",[s._v("last-Modified")]),s._v("的值。")]),s._v(" "),a("li",[s._v("客户端如果接收到"),a("code",[s._v("304")]),s._v("的响应，就表示缓存有效，客户端会直接从缓存中读取数据。")]),s._v(" "),a("li",[s._v("如果缓存失效，服务器会返回新的资源和"),a("code",[s._v("last-modified")]),s._v("的值给客户端。客户端再次请求的\b时候会发送新的"),a("code",[s._v("last-modified")]),s._v("值给服务器。")])])])]),s._v(" "),a("p",[s._v("以上就是关于"),a("code",[s._v("强缓存")]),s._v("和"),a("code",[s._v("协商缓存")]),s._v("控制资源缓存的完整策略。理解了上面的东西，我们来看一下第二张图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/cache3.png",alt:"cache"}})]),s._v(" "),a("p",[s._v("上面这幅图就完整了诠释了客户端第二次向服务器发起请求时候做的一些关于缓存的判断。这些行为主要分两个分支来判断。")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("第一个分支")]),s._v("：当客户端\b再次向服务器请求某个资源的时候，先根据强缓存策略判断\b缓存是否过期。如果没有过期，就直接从缓存中读取资源。这种行为的状态码是"),a("code",[s._v("200 from memory cache")]),s._v("。如果判断出缓存过期，就会走第二个分支。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("第二个分支")]),s._v("：也就是"),a("code",[s._v("协商缓存")]),s._v("的判断。这里客户端会判断是否存在对应的"),a("code",[s._v("协商缓存")]),s._v("的响应头。如果存在，就会通过\b"),a("code",[s._v("协商缓存")]),s._v("的策略向服务器发送请求。")])])]),s._v(" "),a("p",[s._v("上面就是"),a("code",[s._v("http")]),s._v("缓存的一些基本要点。这些缓存策略也是我们最常见的缓存策略。在我们的业务中，我们需要根据自己的情况合理的控制资源的缓存。不要滥用缓存，也不要不用缓存。")]),s._v(" "),a("h2",{attrs:{id:"service-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-worker","aria-hidden":"true"}},[s._v("#")]),s._v(" Service Worker")]),s._v(" "),a("p",[a("code",[s._v("http缓存")]),s._v("是常见且有效的，但是对于\b前端\b开发人员来说可控性比较低。因为这种缓存一般都是在服务器端设置，那有没有一种\b方式能够让前端开发自己控制资源的缓存的行为？那就是下面要介绍的"),a("code",[s._v("Service Worker")]),s._v("。")]),s._v(" "),a("p",[s._v("什么是"),a("code",[s._v("Service Worker")]),s._v("？相信听说过"),a("code",[s._v("PWA(progressive web app)")]),s._v("的人都会对这个东西有或多或少的了解。")]),s._v(" "),a("p",[a("code",[s._v("Service Worker")]),s._v("是运行在浏览器后台的"),a("code",[s._v("worker")]),s._v("脚本。它是通过"),a("code",[s._v("javascript")]),s._v("编写的，只需要简单的几行代码，我们就能对网络请求进行拦截。所以，我们也可以把它看作是浏览器和服务器之间的一个代理服务器。下面就对"),a("code",[s._v("Service Worker")]),s._v("作一些简单的介绍。")]),s._v(" "),a("p",[s._v("首先，我们需要知道"),a("code",[s._v("Service Worker")]),s._v("的几个特点：")]),s._v(" "),a("ul",[a("li",[s._v("它运行在自己的全局脚本的上线下文中")]),s._v(" "),a("li",[s._v("不绑定到具体的网页上，它是独立于网页的浏览器的一个线程")]),s._v(" "),a("li",[s._v("它无法操作网页中的元素，也就无法操作DOM")]),s._v(" "),a("li",[s._v("只能够运行在"),a("code",[s._v("https")]),s._v("环境下")])]),s._v(" "),a("p",[a("code",[s._v("Service Worker")]),s._v("运行在独立的"),a("code",[s._v("worker")]),s._v("线程中。它是完全异步的，并且可以拦截网络请求。通过对"),a("code",[s._v("http")]),s._v("请求的拦截，从而完全控制我们的网站。下图就简单的诠释了"),a("code",[s._v("Service Worker")]),s._v("是如何存在于浏览器中的。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/cache4.png",alt:"cache"}})]),s._v(" "),a("p",[s._v("一个完整的"),a("code",[s._v("Service Worker")]),s._v("是有生命周期的。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/cache5.png",alt:"cache"}})]),s._v(" "),a("ol",[a("li",[s._v("当用户访问一个url的时候，服务器会返回网页。在浏览器执行"),a("code",[s._v("register()")]),s._v("函数的时候，"),a("code",[s._v("Service Worker")]),s._v("脚本开始下载。")]),s._v(" "),a("li",[s._v("在注册的过程中，浏览器会下载、解析并执行"),a("code",[s._v("Service Worker")]),s._v("。如果在这个步骤中出现错误， 上面的"),a("code",[s._v("register()")]),s._v("函数返回的"),a("code",[s._v("Promise")]),s._v("会执行"),a("code",[s._v("reject")]),s._v("操作，并且"),a("code",[s._v("Service Worker")]),s._v("会被废弃。")]),s._v(" "),a("li",[s._v("一旦"),a("code",[s._v("Service Worker")]),s._v("成功执行了，安装事件就会被执行。")]),s._v(" "),a("li",[s._v("一旦安装完成"),a("code",[s._v("Service Worker")]),s._v("就会被激活。激活之后就能够控制其范围内的一切。")])]),s._v(" "),a("p",[s._v("下面是一个简单的"),a("code",[s._v("Service Worker")]),s._v("实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("// service worker 脚本 --- sw.js")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("// 监听fetch事件")]),s._v("\nself"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("addEventListener")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'fetch'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token regex"}},[s._v("/\\.jpg$/")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("test")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("event"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("request"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("url"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        event"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("responseWith")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token function"}},[s._v("fetch")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'/service-worker.jpg'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{attrs:{class:"token script language-javascript"}},[s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("navigator"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("serviceWorker"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("// 注册")]),s._v("\n        navigator"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("serviceWorker"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("register")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'/sw.js'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("then")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            console"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("log")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'service worker注册成功'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token keyword"}},[s._v("catch")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            console"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("error")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'service worker注册失败'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("上面就是一个简单的"),a("code",[s._v("service worker")]),s._v("实例。如果这个实例注册成功，那么后续网页中所有的"),a("code",[s._v(".jpg")]),s._v("图片都会被"),a("code",[s._v("service-worker.jpg")]),s._v("所替代。由此可见，"),a("code",[s._v("service worker")]),s._v("的能力真的很强大。有了"),a("code",[s._v("Service Worker")]),s._v("我们就能够全权并且精准的控制资源的缓存。这完全得益于"),a("code",[s._v("Service Worker")]),s._v("具有的拦截"),a("code",[s._v("http")]),s._v("请求的能力。")]),s._v(" "),a("p",[s._v("下面，我们就来详细的了解一下如何使用"),a("code",[s._v("Service Worker")]),s._v("实现对资源缓存的精准控制。")]),s._v(" "),a("p",[s._v("\b使用"),a("code",[s._v("Service Worker")]),s._v("，我们可以进入任何传入的http请求，并决定如何响应。在"),a("code",[s._v("Service Worker")]),s._v("中，我们可以通过编写逻辑来决定想要\b缓存的资源，满足什么条件以及资源缓存多久，这些我们都可以精准的掌握。")]),s._v(" "),a("p",[a("code",[s._v("Service Worker")]),s._v("是基于事件驱动的，在生命周期的每一个阶段会触发不同的事件。在"),a("code",[s._v("Service Worker")]),s._v("安装阶段，会向服务器获取资源。\b我们通过监听"),a("code",[s._v("install")]),s._v("事件，可以进入这个事件为下次访问准备好缓存。所以，一个简单的使用"),a("code",[s._v("Service Worker")]),s._v("控制缓存的例子可能是下面这样的。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("// 缓存的名称")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" cacheName "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'myCache'")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("// 监听install事件，并在这个事件中通过代码来控制缓存的逻辑")]),s._v("\nself"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("addEventListener")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'install'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    event"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("waitUntil")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("// 使用我们自己定义的缓存的名称来打开\b一个缓存")]),s._v("\n        caches"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("open")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cacheName"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("then")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cache "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{attrs:{class:"token comment"}},[s._v("// 添加我们需要缓存的文件")]),s._v("\n                cache"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("addAll")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n                    "),a("span",{attrs:{class:"token string"}},[s._v("'/js/script.js'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                    "),a("span",{attrs:{class:"token string"}},[s._v("'/css/style.css'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                    "),a("span",{attrs:{class:"token string"}},[s._v("'/image/img.png'")]),s._v("\n                "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("这里我们监听了"),a("code",[s._v("install")]),s._v("事件，它会在浏览器安装并注册"),a("code",[s._v("Service Worker")]),s._v("\b的时候触发。这也是把资源添加到缓存中的最佳时间。前提就是，我们需要明确的知道哪些资源需要通过"),a("code",[s._v("Service Worker")]),s._v("来进行缓存。")]),s._v(" "),a("p",[s._v("这里，我们先来对上面控制缓存的代码作一些简单的解释。")]),s._v(" "),a("p",[s._v("首先，我们定义了一个变量，它就是用来设置缓存的名称的。我们可以为不同的缓存设置不同的名称，每个缓存名称对应唯一的缓存。缓存名称在"),a("strong",[s._v("版本控制")]),s._v("和"),a("strong",[s._v("缓存清除")]),s._v("的时候会带来极大的便利。")]),s._v(" "),a("p",[s._v("接着，我们就监听了"),a("code",[s._v("install")]),s._v("事件并在其中开启了缓存。一旦缓存开启成功，我们就可以把需要缓存的资源加进去。这时候，我们就需要调用"),a("code",[s._v("cache.addAll()")]),s._v("并传入缓存文件数组。如果所有的文件\b都被成功的缓存了，那么"),a("code",[s._v("Service Worker")]),s._v("便会安装成功。如果有任何的文件安装失败了，那么安装的过程也会失败。这就需要我们对文件缓存列表格外注意，一个很长的缓存列表会增加缓存失败的概率。这一点，我们需要了解。")]),s._v(" "),a("p",[s._v("如果缓存成功，我们就可以在\b接下来的请求中读取缓存的资源了。为了能够从缓存中读取资源，我们需要监听"),a("code",[s._v("Service Worker")]),s._v("的"),a("code",[s._v("fetch")]),s._v("事件。这个事件会在浏览器发起请求的时候被触发。比如：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("// 监听fetch事件监听器")]),s._v("\nself"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("addEventListener")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'fetch'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    event"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("responseWith")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("// 检查该次请求，是否匹配当前缓存中存在的资源")]),s._v("\n        caches"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("match")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("event"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("request"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("then")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{attrs:{class:"token comment"}},[s._v("// 如果有response，表示存在缓存的内容，直接将其返回")]),s._v("\n                    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" response\n                "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                "),a("span",{attrs:{class:"token comment"}},[s._v("// 否则，继续向服务器发起请求并响应")]),s._v("\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("fetch")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("event"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("request"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("上面的代码比较关键的就是我们使用"),a("code",[s._v("caches.match()")]),s._v("函数来检查传入的\burl是否匹配当前缓存中存在的内容。如果匹配，返回缓存中的资源。如果资源并不存在缓存中，那就继续向服务器发起请求并响应。")]),s._v(" "),a("p",[s._v("上面的缓存都是我们在安装阶段进行缓存的，上面我们也提及过，这种方式要求我们需要我们明确知道缓存的资源。，所以，这也被称为"),a("strong",[s._v("预缓存")]),s._v("。但是，有的时候我们并不能对所有的资源都明确的了解，那这个时候我们应该怎么做呢？")]),s._v(" "),a("p",[a("code",[s._v("Service Worker")]),s._v("是能够拦截"),a("code",[s._v("http")]),s._v("请求的，我们可以在发起请求获取到响应后再缓存响应的资源。也就是说我们需要先请求资源，响应的时候立即将其缓存起来。基本方式如下图表示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/blog/cache6.png",alt:"cache"}})]),s._v(" "),a("p",[s._v("为了能够实现上述缓存策略，我们需要对上面控制缓存的代码进行更改。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" cacheName "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'myCache'")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("// 为fetch事件\b添加事件监听器以拦截请求")]),s._v("\nself"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("addEventListener")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'fetch'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    event"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("responseWith")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("// 判断当前请求的资源是否存在于缓存中")]),s._v("\n        caches"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("match")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("event"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("request"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("then")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{attrs:{class:"token comment"}},[s._v("// 如果存在于缓存中，就直接从缓存中返回资源")]),s._v("\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" response\n                "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n                "),a("span",{attrs:{class:"token comment"}},[s._v("// 这里就表示请求的资源并不存在于缓存中")]),s._v("\n                "),a("span",{attrs:{class:"token comment"}},[s._v("// 首先需要克隆请求，因为请求只是一个流，只能被使用一次")]),s._v("\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" requestToCache "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" event"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("request"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("clone")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n                "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("fetch")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("requestToCache"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                    "),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("then")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("response "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v("response "),a("span",{attrs:{class:"token operator"}},[s._v("||")]),s._v(" response"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("status "),a("span",{attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("200")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                            "),a("span",{attrs:{class:"token comment"}},[s._v("// 表示请求失败或者服务器返回了错误的代码，这个时候需要立即返回响应")]),s._v("\n                            "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" response\n                        "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n                        "),a("span",{attrs:{class:"token comment"}},[s._v("// 复制响应，因为你我们不仅需要将响应添加到缓存中，还需要将响应返回给请求")]),s._v("\n                        "),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" responseToCache "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" response"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("clone")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n                        "),a("span",{attrs:{class:"token comment"}},[s._v("// 开始进行缓存")]),s._v("\n                        caches"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("open")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cacheName"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            "),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("then")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cache "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                                cache"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("put")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("requestToCache"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" responseToCache"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                            "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                        "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" response\n                    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br")])]),a("p",[s._v("上面就是我们\b控制缓存的新策略。这里我们在"),a("code",[s._v("fetch")]),s._v("事件处理我们的缓存。主要分为如下几个过程：")]),s._v(" "),a("p",[s._v("首先，检查请求的资源是否存在于缓存中。如果存在于缓存中，直接返回缓存中的资源。如果缓存中不存在这个请求对应的资源，那我们就需要继续发起网络请求了。在继续发送请求之前，我们需要\b先复制请求。因为无论是请求还是响应，在"),a("code",[s._v("Service Worker")]),s._v("中都只是一个流，只能被使用一次。所以使用之前需要进行克隆。")]),s._v(" "),a("p",[s._v("\b再发送请求之后，如果响应成功，我们就需要将这个响应添加到缓存中。这样我们就能在下次请求相同资源的时候直接使用缓存的资源了。")]),s._v(" "),a("p",[s._v("利用这种方式，我们就实现了动态添加缓存了。更多的时候我们可以将上述两种方式结合起来使用。")]),s._v(" "),a("p",[s._v("到这里，我们需要思考一个问题--如果一个资源被缓存了，我们应该怎么更新它？其实，"),a("code",[s._v("Service Worker")]),s._v("有一个很大优点--如果我们对"),a("code",[s._v("Service Worker")]),s._v("文件本身做出了更改，都会触发"),a("code",[s._v("Service Worker")]),s._v("的自动更新流程。这个功能可以让我们使用新文件更新缓存。一般来说，主要有如下两种方式：")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("更新用来存储缓存的名称")]),s._v("。因为，如果我们更改了一个缓存的名称，在"),a("code",[s._v("Service Worker")]),s._v("自定更新的时候。就会重新创建一个缓存，而且之前的缓存会被直接抛弃。所以，我们可以重新定义我们的缓存策略。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("缓存破坏")]),s._v("。这种方式我们应该比较熟悉，以前我们破坏缓存就有一种方式--给文件加上一个查询字符串，这个查询字符串只要改变，就会\b被看作一个全新的资源。基于此，我们可以在每次更新缓存的时候直接将被更新的文件的文件名改变。这样就不会被"),a("code",[s._v("Service Worker")]),s._v("缓存了。")])])]),s._v(" "),a("p",[s._v("上面我们对一些常见的缓存方式做了一个简单的介绍。至于后端领域的缓存等待深入了解之后再作详解。总之，合理的利用缓存，\b不管是产品的体验还是性能都能带来很大的提升。最重要的是，了解了缓存的方式，可以为我们以后优化产品体验的时候提供一个正确的方向。")])])}],!1,null,null,null);e.options.__file="缓存那些事.md";t.default=e.exports}}]);