(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{199:function(e,_,v){"use strict";v.r(_);var o=v(0),c=Object(o.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,_=e.$createElement,v=e._self._c||_;return v("div",{staticClass:"content"},[v("h1",[e._v("web安全之csrf攻击")]),e._v(" "),v("p",[v("code",[e._v("csrf")]),e._v("的全称是"),v("code",[e._v("Cross Site Request Forgery")]),e._v("，也就是我们通常所说的"),v("code",[e._v("跨站请求伪造")]),e._v("。")]),e._v(" "),v("p",[e._v("一般来说，"),v("code",[e._v("csrf")]),e._v("能够成功发起需要具备以下三个条件：")]),e._v(" "),v("ul",[v("li",[e._v("用户登录正常网站"),v("code",[e._v("A")]),e._v("，并登录。这个时候在网站"),v("code",[e._v("A")]),e._v("的"),v("code",[e._v("cookie")]),e._v("中已经保留有用户的登录信息。")]),e._v(" "),v("li",[e._v("在不登出网站"),v("code",[e._v("A")]),e._v("的情况下，访问危险网站"),v("code",[e._v("B")]),e._v("。")]),e._v(" "),v("li",[e._v("在危险网站"),v("code",[e._v("B")]),e._v("中向网站"),v("code",[e._v("A")]),e._v("发起请求。这个请求一般都会带上用户在"),v("code",[e._v("A")]),e._v("网站中的cookie信息。")])]),e._v(" "),v("p",[e._v("下面是一个典型的"),v("code",[e._v("csrf")]),e._v("攻击的例子：")]),e._v(" "),v("p",[v("img",{attrs:{src:"/blog/csrf1.png",alt:"csrf"}})]),e._v(" "),v("p",[e._v("上面的例子中，"),v("code",[e._v("csrf")]),e._v("能够攻击成功的原因就是"),v("code",[e._v("B")]),e._v("在向"),v("code",[e._v("A")]),e._v("网站的服务器发送请求的时候成功的带上了"),v("code",[e._v("A")]),e._v("网站的cookie信息。为了能够更好的防御"),v("code",[e._v("csrf")]),e._v("的攻击，我们需要对浏览器的cookie有一个简单的了解。")]),e._v(" "),v("h2",{attrs:{id:"cookie"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cookie","aria-hidden":"true"}},[e._v("#")]),e._v(" Cookie")]),e._v(" "),v("p",[v("code",[e._v("Cookie")]),e._v("是浏览器用来保存信息的一种方式，主要是用来保存服务器下发给客户端的信息的。服务器通过"),v("code",[e._v("set-cookie")]),e._v("响应头部向客户端设置"),v("code",[e._v("cookie")]),e._v("。而客户端在向服务器进行请求的时候也会通过"),v("code",[e._v("cookie")]),e._v("请求头部携带自己保存的信息发给服务器。")]),e._v(" "),v("p",[e._v("浏览器的"),v("code",[e._v("cookie")]),e._v("一般分为两种：")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("Session Cookie")]),e._v("：也被称为"),v("code",[e._v("临时Cookie")])]),e._v(" "),v("li",[v("code",[e._v("Third-party Cookir")]),e._v("：也被称为"),v("code",[e._v("本地Cookie")])])]),e._v(" "),v("p",[e._v("两者的区别在于"),v("code",[e._v("本地cookie")]),e._v("在服务器通过"),v("code",[e._v("Set-cookie")]),e._v("头部设置"),v("code",[e._v("cookie")]),e._v("信息的时候会加上过期时间，也就是"),v("code",[e._v("Expire")]),e._v("字段，只有到了"),v("code",[e._v("Expire")]),e._v("指定的时间后"),v("code",[e._v("cookie")]),e._v("信息才会失效，这种"),v("code",[e._v("cookie")]),e._v("一般保存在本地。"),v("code",[e._v("临时Cookie")]),e._v("主要是用来保存用户的会话信息的，这种"),v("code",[e._v("Cookie")]),e._v("一般不会指定过期时间，它会存在于浏览器进程的生命周期内，及时浏览器打开了新的tab页，"),v("code",[e._v("Session Cookie")]),e._v("也是有效的。这种"),v("code",[e._v("Cookie")]),e._v("是保存在浏览器进程的内存空间内，会随着浏览器的关闭而销毁。")]),e._v(" "),v("p",[e._v("如果浏览器从一个域的页面中加载另一个域的页面，因为安全的原因，某些浏览器会阻止"),v("code",[e._v("本地cookie")]),e._v("的发送，但不会阻止"),v("code",[e._v("临时Cookie")]),e._v("的发送。")]),e._v(" "),v("p",[e._v("所以浏览器对于cookie的策略，对我们防御csrf的攻击具有很大的帮助。")]),e._v(" "),v("h2",{attrs:{id:"csrf的防御"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#csrf的防御","aria-hidden":"true"}},[e._v("#")]),e._v(" CSRF的防御")]),e._v(" "),v("p",[e._v("明白了"),v("code",[e._v("csrf")]),e._v("攻击的基本原理后，我们就需要去考虑怎么来防御这个比较奇特的攻击呢？业界比较流行的攻击手段主要有如下几种：")]),e._v(" "),v("h3",{attrs:{id:"验证码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#验证码","aria-hidden":"true"}},[e._v("#")]),e._v(" 验证码")]),e._v(" "),v("p",[e._v("验证码被认为是防御"),v("code",[e._v("csrf")]),e._v("攻击最简洁和有效的手段。我们只需要在一些必要的场景下加入验证码的校验，就能在很大程度上预防"),v("code",[e._v("csrf")]),e._v("的攻击。")]),e._v(" "),v("p",[e._v("csrf攻击往往是在用户不知情的情况下发起的网络请求。而验证码强制必须和用户交互，才能完成最终的请求。但是验证码并不是万万不能的，为了良好的用户体验，我们不可能对每一个网络请求都加上验证码。所以，验证码对于预防"),v("code",[e._v("csrf")]),e._v("攻击只是一个辅助的手段，而不是一个最终的解决方案。")]),e._v(" "),v("h3",{attrs:{id:"referer检查"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#referer检查","aria-hidden":"true"}},[e._v("#")]),e._v(" referer检查")]),e._v(" "),v("p",[v("code",[e._v("referer")]),e._v("是http的一个请求头，主要是用来判断当前请求是从哪个网址发送过来的。如果判断出请求的"),v("code",[e._v("referer")]),e._v("字段不在我们允许的范围内，就极有可能是一个"),v("code",[e._v("csrf")]),e._v("攻击。但是，这种检查也是有一个很大的弊端的，"),v("strong",[e._v("服务器并不是什么时候都能够取到"),v("code",[e._v("referer")])]),e._v("。很多用户出于隐私的保护，限制了"),v("code",[e._v("referer")]),e._v("字段的发送。当浏览器从"),v("code",[e._v("https")]),e._v("跳转到"),v("code",[e._v("http")]),e._v("的时候，也会出于安全的考虑，限制"),v("code",[e._v("referer")]),e._v("字段的发送。所以，这种防御手段也是一个可选的辅助方法，而不是一个终极解决方案。")]),e._v(" "),v("h3",{attrs:{id:"token验证"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#token验证","aria-hidden":"true"}},[e._v("#")]),e._v(" token验证")]),e._v(" "),v("p",[e._v("对于csrf攻击的防御，"),v("code",[e._v("token")]),e._v("验证算是一个比较统一的解决方案。")]),e._v(" "),v("p",[e._v("我们可以思考一下，"),v("code",[e._v("csrf")]),e._v("攻击为什么能够成功？")]),e._v(" "),v("p",[v("code",[e._v("csrf")]),e._v("攻击往往是在用户不知情的情况下向服务器发送请求，但是这个请求是如何构建出来的？所以，从本质上说，"),v("code",[e._v("csrf")]),e._v("攻击的本质原因就是"),v("strong",[e._v("攻击者是可以猜出我们请求的参数的")]),e._v("。因为只有这样，攻击者才能构建出一个正确的请求。")]),e._v(" "),v("p",[e._v("知道这个原因后，我们就可以想到一个比较好的解决方案。比如，对参数进行加密，让攻击者无法正确理解参数的含义。或者在每次请求的时候，携带一个随机字符串，这样攻击者拿不到这个随机串，也就无法构造出正确的请求了。")]),e._v(" "),v("p",[v("code",[e._v("token")]),e._v("验证就是用来满足这种场景的。当我们向服务器请求资源的时候，服务器返回资源的同时向客户端下发一个token，客户端在每次请求的时候都需要带上这个token。服务器在收到请求后会先验证这个token的有效性。如果有效，会成功响应。否则，会拒绝响应。")]),e._v(" "),v("p",[e._v("这个"),v("code",[e._v("token")]),e._v("可以看作是客户端和服务器之间的一个凭证，所以，是不能让第三方知道的。一般我们可以将token保存在用户的session或者浏览器的cookie中。")]),e._v(" "),v("h3",{attrs:{id:"samesite限制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#samesite限制","aria-hidden":"true"}},[e._v("#")]),e._v(" SameSite限制")]),e._v(" "),v("p",[e._v("上面几种预防方法只是从工程的角度出发尽可能的避免"),v("code",[e._v("csrf")]),e._v("的攻击。为了能从源头上解决"),v("code",[e._v("csrf")]),e._v("的攻击，http协议出了一个草案，就是在"),v("code",[e._v("set-cookie")]),e._v("中增加一个新的选项"),v("code",[e._v("SameSite")]),e._v("，这个选项表明这个cookie是一个"),v("code",[e._v("同站")]),e._v("cookie，是不能在第三方域名中进行发送的。")]),e._v(" "),v("p",[e._v("这个选项有两个值"),v("code",[e._v("Strict")]),e._v("和"),v("code",[e._v("Lax")]),e._v("。")]),e._v(" "),v("h4",{attrs:{id:"samesite-strict"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#samesite-strict","aria-hidden":"true"}},[e._v("#")]),e._v(" SameSite=Strict")]),e._v(" "),v("p",[e._v("cookie的严格模式。表示这个cookie在任何情况下都不能在第三方的域名中进行发送。比如，我们在"),v("code",[e._v("a.com")]),e._v("中设置了如下cookie：")]),e._v(" "),v("div",{staticClass:"language-css line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-css"}},[v("code",[v("span",{attrs:{class:"token property"}},[e._v("Set-Cookie")]),v("span",{attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" foo=1"),v("span",{attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" SameSite=Strict"),v("span",{attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),v("span",{attrs:{class:"token property"}},[e._v("Set-Cookie")]),v("span",{attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" bar=2\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br"),v("span",{staticClass:"line-number"},[e._v("2")]),v("br")])]),v("p",[e._v("如果在我们的"),v("code",[e._v("b.com")]),e._v("中存在一个对"),v("code",[e._v("a.com")]),e._v("的请求，那么foo这个cookie是不会包含在请求头中的，而bar却会。")]),e._v(" "),v("h4",{attrs:{id:"samesite-lax"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#samesite-lax","aria-hidden":"true"}},[e._v("#")]),e._v(" SameSite=Lax")]),e._v(" "),v("p",[e._v("cookie的宽松模式。只会在使用危险HTTP方法发送跨域cookie的时候进行阻止，例如POST方式。比如下面两个场景：")]),e._v(" "),v("ul",[v("li",[e._v("在"),v("code",[e._v("a.com")]),e._v("中通过点击一个链接(get请求)，跳转到了"),v("code",[e._v("b.com")]),e._v("中。如果"),v("code",[e._v("b.com")]),e._v("设置了"),v("code",[e._v("SameSite=Lax")]),e._v("，这个请求是会带上这个cookie的。")]),e._v(" "),v("li",[e._v("在"),v("code",[e._v("a.com")]),e._v("中提交(post请求)一个表单到"),v("code",[e._v("b.com")]),e._v("中。如果"),v("code",[e._v("b.com")]),e._v("设置了"),v("code",[e._v("SameSite=Lax")]),e._v("，这个提交请求是不会带上这个cookie的。")])]),e._v(" "),v("blockquote",[v("p",[e._v("如果我们的网站被设置在了一个iframe中，在SameSite=Lax的cookie同样不会被发送。")])])])}],!1,null,null,null);c.options.__file="web安全之csrf攻击.md";_.default=c.exports}}]);