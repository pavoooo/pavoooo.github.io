(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{194:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",[s._v("web安全之xss攻击")]),s._v(" "),a("p",[a("strong",[s._v("跨站脚本攻击")]),s._v("又被称为"),a("code",[s._v("xss")]),s._v("。"),a("code",[s._v("xss")]),s._v("属于客户端攻击，攻击者在我们的网页中嵌入恶意脚本，当用户使用浏览器浏览这些被嵌入恶意脚本的网页的时候，脚本就会在我们的浏览器中执行。xss攻击的核心方式是"),a("code",[s._v("脚本")]),s._v("。这些脚本通常是"),a("code",[s._v("javascript脚本")]),s._v("，从这个层面来说javascript能做的事情，xss攻击一般都能做到。比如：")]),s._v(" "),a("ul",[a("li",[s._v("获取页面内容")]),s._v(" "),a("li",[s._v("盗取用户cookie")]),s._v(" "),a("li",[s._v("劫持前端逻辑")]),s._v(" "),a("li",[s._v("发送非法请求")]),s._v(" "),a("li",[s._v("盗取页面数据")]),s._v(" "),a("li",[s._v("url跳转")])]),s._v(" "),a("h2",{attrs:{id:"xss分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss分类","aria-hidden":"true"}},[s._v("#")]),s._v(" xss分类")]),s._v(" "),a("p",[s._v("我们一般把xss分为三类："),a("code",[s._v("反射型xss")]),s._v("，"),a("code",[s._v("存储型xss")]),s._v("，"),a("code",[s._v("DOM型xss")])]),s._v(" "),a("h3",{attrs:{id:"反射型xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射型xss","aria-hidden":"true"}},[s._v("#")]),s._v(" 反射型xss")]),s._v(" "),a("p",[a("code",[s._v("反射型xss")]),s._v("又被称为"),a("code",[s._v("非持久型xss")]),s._v("。当用户访问一个带有xss攻击代码的url请求的时候，向服务器发送请求，服务器接受请求后处理，并把客户端发送的xss攻击代码返回给客户端，客户端解析这段代码的时候，就有可能遭受xss攻击。")]),s._v(" "),a("p",[s._v("下面是一个典型的反射型xss攻击示例：")]),s._v(" "),a("p",[s._v("用户浏览某个网站A，攻击者在这个网站中嵌入了恶意的脚本用于盗取用户的cookie等信息\n攻击者诱导用户触发xss攻击（比如诱导用户点击非法链接），当用户触发了xss攻击的时候就会将自己的用户信息发送给攻击者\n攻击者在获取用户的cookie后，就有可能盗用用户的身份信息进行非法操作。")]),s._v(" "),a("h3",{attrs:{id:"存储型xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储型xss","aria-hidden":"true"}},[s._v("#")]),s._v(" 存储型xss")]),s._v(" "),a("p",[a("code",[s._v("存储型xss")]),s._v("又被称为"),a("code",[s._v("持久化的xss")]),s._v(".也是最危险的xss攻击方式。一旦攻击成功，就有可能造成大规模的xss攻击，也就是我们通常所说的xss蠕虫。")]),s._v(" "),a("p",[s._v("存储型xss攻击的一般原理是，客户端将带有xss攻击的数据发送给服务器，服务器接收并存储在数据库。当用户下次再访问这个页面的时候，服务器会读取数据库并将之前的xss代码取出发送给浏览器。浏览器解析这段数据的时候，就会遭受xss攻击。")]),s._v(" "),a("p",[s._v("所以，反射型xss攻击一般需要用户手动触发，而存储型xss攻击却是能够自动触发的。一般来说，反射型xss攻击的危害要比存储型xss攻击的危害要小的多。")]),s._v(" "),a("h3",{attrs:{id:"dom型xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom型xss","aria-hidden":"true"}},[s._v("#")]),s._v(" DOM型xss")]),s._v(" "),a("p",[s._v("我们可以通过JavaScript来操作dom树，所以，xss攻击也是能够做到这一点的。dom型xss攻击最大的危害就是改变我们网页的布局。这种类型的xss是不需要和服务器进行交互的，只发生在客户端处理阶段。比如一段xss攻击的代码是：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" div "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("createElement")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'div'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ndiv"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("innerText "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'xss攻击的代码'")]),s._v("\ndocument"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("body"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("appendChild")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("div"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("xss攻击点")])]),s._v(" "),a("p",[s._v("知道了xss的基本类型后我们就要了解xss的攻击点一般在哪里？可以这样说，有输入和输出的地方就有可能遭受xss攻击。所以，我们一定要对客户端的输入和服务端的输出做严格的校验，但是这种校验往往是比较复杂的，因为xss攻击的变法太多太多了。下面几个点是需要我们格外注意的。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("html节点的内容")]),s._v("：如果一个节点的内容是动态生成的，里面包含了用户的输入信息就有可能遭受xss攻击。")])]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n #{content}\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("上面的content有可能会携带xss攻击，比如：")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("div")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{attrs:{class:"token script language-javascript"}},[a("span",{attrs:{class:"token function"}},[s._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token number"}},[s._v("123")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")])]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("html属性")]),s._v("：某个节点的属性是通过用户的输入生成的，那这些输入就有可能包含xss攻击的代码。")])]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("img")]),s._v(" "),a("span",{attrs:{class:"token attr-name"}},[s._v("src")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("#{src}"),a("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("src的内容可能是：")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[s._v('#" onerror="alert(123)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("会造成html的内容如下：")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("img")]),s._v(" "),a("span",{attrs:{class:"token attr-name"}},[s._v("src")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("#"),a("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),a("span",{attrs:{class:"token attr-name"}},[s._v("onerror")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("alert(123)"),a("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("javascript代码")]),s._v("：JavaScript代码中存在后台注入的变量，或者包含用户输入的信息")])]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[s._v("const content = '#{content}'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("content的内容可能是："),a("strong",[s._v("';alert(123);'")])]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("富文本")]),s._v("：富文本一般是需要保留html的。这些html就有可能造成xss攻击。")])]),s._v(" "),a("h2",{attrs:{id:"xss防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss防御","aria-hidden":"true"}},[s._v("#")]),s._v(" xss防御")]),s._v(" "),a("p",[s._v("明确了xss的切入点后，我们就可以针对不同的切入点进行不同的防御了。其实浏览器内部是有自己的xss防御策略的。\n浏览器自动防御\n浏览器是可以自动防御某些xss攻击，但是这种防御一般都是比较有限。只能防御部分反射型xss攻击。而且是不会拦截出现在js中的脚本的。比如\n比如我们的url是：")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[s._v("http://www.a.com?content="),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{attrs:{class:"token script language-javascript"}},[a("span",{attrs:{class:"token function"}},[s._v("alert")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token number"}},[s._v("123")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")])]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("我们的html中有:"),a("strong",[s._v("#{content}")])]),s._v(" "),a("p",[s._v("这个html中的content是后端通过获取我们的查询字符串后重新渲染到页面上的。如果我们此时访问页面，就会被浏览器拦截掉\n我们可以通过在响应头中添加"),a("code",[s._v("X-XSS-Protection: 0")]),s._v("来关闭浏览器的自动防御")]),s._v(" "),a("h3",{attrs:{id:"html节点内容的防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html节点内容的防御","aria-hidden":"true"}},[s._v("#")]),s._v(" html节点内容的防御")]),s._v(" "),a("p",[s._v("对于html节点内容，我们能够通过转义的手段来防御xss攻击。这里我们并不需要转义太多的东西。因为html中识别的是标签，所以，我们通过把'<'和'>'进行转义，就能很好的防御这部分的xss攻击。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{attrs:{class:"token function-variable function"}},[s._v("escapeHtml")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" str "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" str"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token regex"}},[s._v("/</g")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'&lt;'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token regex"}},[s._v("/>/g")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'&gt;'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"转义html的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转义html的属性","aria-hidden":"true"}},[s._v("#")]),s._v(" 转义html的属性")]),s._v(" "),a("p",[s._v("转义html属性的内容的时候，我们需要知道什么字符能够分离html属性？其实我们所常见的html属性的表示方法一般有如下三种：")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[s._v("id = \"app\"\nid = 'app'\nid = app\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("所以，在对这部分内容进行转义的时候可以把\"，'，和空格全给转义了。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{attrs:{class:"token function-variable function"}},[s._v("escapeAttr")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" str "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" str"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token regex"}},[s._v("/\"|'/g")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'&quto;'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token regex"}},[s._v("/\\s/g")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'&#32'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("但是，这里的转义只能防御部分xss攻击的情况，比如下面这种就束手无策了。")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("a")]),s._v(" "),a("span",{attrs:{class:"token attr-name"}},[s._v("href")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("javascript:alert(0)"),a("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("链接"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("a")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("对于这中形式的防御，我们就需要使用下面防御富文本xss攻击的手段来阻止。")]),s._v(" "),a("h3",{attrs:{id:"javascript代码防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript代码防御","aria-hidden":"true"}},[s._v("#")]),s._v(" javascript代码防御")]),s._v(" "),a("p",[s._v("对于js中的内容的防御，只需要将引号转义（不是转义成实体，而是使用转义符\\）或者将待输入的内容序列化。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{attrs:{class:"token function-variable function"}},[s._v("escapeJs")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" str "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" str"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token regex"}},[s._v('/"/g')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'\\\\\"'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token regex"}},[s._v("/'/g")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"\\\\\'"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token regex"}},[s._v("/\\\\/g")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("'\\\\\\\\'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("上面只能保证大部分情况的安全，最保险的是对数据进行一次序列化；")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token constant"}},[s._v("JSON")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("stringify")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"富文本防御"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#富文本防御","aria-hidden":"true"}},[s._v("#")]),s._v(" 富文本防御")]),s._v(" "),a("p",[s._v("富文本其实就是一大段的html，这些html中会包含大量的格式和html标签。对于富文本的防御，我们不能使用转义的方式，因为html我们要原样保留。因此，我们需要使用过滤的方式来防御富文本的xss攻击。\n过滤的方式有两种：")]),s._v(" "),a("ul",[a("li",[s._v("按照黑名单进行过滤--过滤掉我们认为不安全的btml属性和标签。")]),s._v(" "),a("li",[s._v("按照白名单过滤--只允许我们定义好的标签和属性存在。")])]),s._v(" "),a("p",[s._v("这两种方式，黑名单的实现比较简单，但是稍不留神就可能留下漏洞。白名单实现比较麻烦，需要将html进行完全的解析，然后过滤，再组装成html。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("// 黑名单的方式")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{attrs:{class:"token function-variable function"}},[s._v("xssFilter")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" html "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("// 黑名单的方式过滤")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("// 过滤script标签")]),s._v("\n    html "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" html"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token regex"}},[s._v("/<\\s*\\/?script\\s*>/g")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("''")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("// 过滤属性值javascript:开头")]),s._v("\n    html "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" html"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token regex"}},[s._v("/javascript:[^'\"]*/g")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("''")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("// 过滤onerror属性")]),s._v("\n    html "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" html"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token regex"}},[s._v("/onerror\\s*=\\s*['\"]?[^'\"]*['\"]/g")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v("''")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("// ...其他很多需要过滤的属性，xss的变种太多了")]),s._v("\n    "),a("span",{attrs:{class:"token comment"}},[s._v("// 这个时候可以使用白名单进行过滤")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("// 白名单的方式过滤")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("// 首先需要将html解析成一个树状结构，然后针对这个树遍历元素，判断标签或者属性是否在白名单中，如果不在")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("// 直接干掉。")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("// 可以直接在node端使用cheerio实现上述功能")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{attrs:{class:"token function-variable function"}},[s._v("xssFilter")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" html "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" cheerio "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("require")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'cheerio'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" $ "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" cheerio"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("load")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("html"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" whiteList "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("// 可以添加更多的规则")]),s._v("\n        "),a("span",{attrs:{class:"token string"}},[s._v("'img'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token string"}},[s._v("'src'")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{attrs:{class:"token function"}},[s._v("$")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v("'*'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("each")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" element"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("// 不在白名单中 ")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token operator"}},[s._v("!")]),s._v("whiteList"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("element"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{attrs:{class:"token function"}},[s._v("$")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("element"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("remove")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{attrs:{class:"token comment"}},[s._v("// 在白名单中，处理属性")]),s._v("\n        "),a("span",{attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" attr "),a("span",{attrs:{class:"token keyword"}},[s._v("in")]),s._v(" element"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("attribs"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("whiteList"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("element"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("indexOf")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("attr"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("-")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{attrs:{class:"token comment"}},[s._v("// 不在白名单中的属性，移除")]),s._v("\n                "),a("span",{attrs:{class:"token function"}},[s._v("$")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("element"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("attr")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("attr"),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token keyword"}},[s._v("null")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" $"),a("span",{attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{attrs:{class:"token function"}},[s._v("html")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br")])]),a("p",[s._v("上面所做的一系列措施都是从开发的角度去做的。然是xss攻击千变万化，要想彻底的杜绝他们，仅仅依靠编程的hack方法是十分麻烦的。所以，浏览器就提出了一个从根本上解决xss攻击的方法："),a("code",[s._v("CSP")]),s._v("。")]),s._v(" "),a("p",[s._v("csp的全称是内容安全策略。是"),a("code",[s._v("Content Security Policy")]),s._v("的简称。")]),s._v(" "),a("p",[s._v("csp的策略和上面我们提到的白名单策略比较相似，开发者要明确的告诉客户端哪些脚本可以被执行。它的解析和执行都是由客户端决定的，而开发者所需要做的就是告诉浏览器可执行的脚本规则即可。")]),s._v(" "),a("p",[s._v("为了启用csp，我们可以从两个方面进行设置：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("服务端")]),s._v("，设置"),a("code",[s._v("Content-Security-Policy")]),s._v("响应头")]),s._v(" "),a("li",[a("strong",[s._v("客户端")]),s._v("，设置meta标签")])]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("meta")]),s._v(" "),a("span",{attrs:{class:"token attr-name"}},[s._v("http-equiv")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("Content-Security-Policy"),a("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),a("span",{attrs:{class:"token attr-name"}},[s._v("content")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{attrs:{class:"token punctuation"}},[s._v('"')]),s._v("script-src "),a("span",{attrs:{class:"token punctuation"}},[s._v("'")]),s._v("self"),a("span",{attrs:{class:"token punctuation"}},[s._v("'")]),s._v("; object-src "),a("span",{attrs:{class:"token punctuation"}},[s._v("'")]),s._v("none"),a("span",{attrs:{class:"token punctuation"}},[s._v("'")]),s._v("; style-src cdn.example.org third-party.org; child-src https:"),a("span",{attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("csp的限制策略一般是如下格式："),a("code",[s._v("限制选项 选项值")]),s._v("。")]),s._v(" "),a("p",[s._v("csp提供了很多的限制选项，其实就是设置了加载资源的时候需要采取的策略。对于csp，其加载策略主要有如下几种：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("script-src")]),s._v("：加载脚本的时候采取的策略")]),s._v(" "),a("li",[a("code",[s._v("style-src")]),s._v("：加载样式表的时候采取的策略")]),s._v(" "),a("li",[a("code",[s._v("img-src")]),s._v("：加载图像的时候采取的策略")]),s._v(" "),a("li",[a("code",[s._v("media-src")]),s._v("：加载媒体文件（音频和视频）采取的策略")]),s._v(" "),a("li",[a("code",[s._v("font-src")]),s._v("：加载字体采取的策略")]),s._v(" "),a("li",[a("code",[s._v("object-src")]),s._v("：加载插件（如flash）采取的策略")]),s._v(" "),a("li",[a("code",[s._v("child-src")]),s._v("：加载框架采取的策略")]),s._v(" "),a("li",[a("code",[s._v("frame-ancestors")]),s._v("：嵌入的外部资源")])]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[s._v("（比如"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("frame")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("、"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("iframe")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("、"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("embed")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("和"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("applet")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("采取的策略")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("connect-src")]),s._v("：进行http连接时候的限制策略（通过 XHR、WebSockets、EventSource等）")]),s._v(" "),a("li",[a("code",[s._v("worker-src")]),s._v("：加载worker脚本的时候采取的策略")]),s._v(" "),a("li",[a("code",[s._v("manifest-src")]),s._v("：加载manifest文件时候采取的策略。\n上面的限制选项几乎涉及了浏览器加载资源的方方面面，除了上述限制，还有一个"),a("code",[s._v("default-src")]),s._v("限制。这个限制是用来设置上面各个选项的默认值的。比如：")])]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[s._v("Content-Security-Policy: default-src 'self'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("上面的这个请求头限制了所有的外部资源必须和当前域名同域。")]),s._v(" "),a("p",[s._v("明确了限制选项，我们可以设置如下限制选项值。这些值其实就是我们对浏览器设置的白名单。")]),s._v(" "),a("ul",[a("li",[s._v("我们可以明确资源加载的域名，如："),a("code",[s._v("example.org")]),s._v("，"),a("code",[s._v("https://example.com")])]),s._v(" "),a("li",[s._v("我们可以明确资源加载的路径，如："),a("code",[s._v("example.org/resources/js")])]),s._v(" "),a("li",[s._v("我们可以通过通配符来设置限制，如："),a("code",[s._v("*.example.org")]),s._v("，表示任意的子域名都是可以的")]),s._v(" "),a("li",[s._v("我们可以明确加载的协议，http或者https")]),s._v(" "),a("li",[s._v("我们可以通过关键字self指定，表示当前域名")])]),s._v(" "),a("p",[s._v("我们可以通过关键字none指定，表示禁止加载任何的外部资源\n上面的这些选项值可以同时指定多个，需要使用空格分开。")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[s._v("Content-Security-Policy: script-src 'self' \nhttps://apis.google.com\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("对于xss的防御，我们可以通过设置"),a("code",[s._v("script-src")]),s._v("和"),a("code",[s._v("object-src")]),s._v("来限制，同时"),a("code",[s._v("script-src")]),s._v("也包含了一些特殊的选项值。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("unsafe-inline")]),s._v("：允许执行页面内嵌的script和事件监听函数")]),s._v(" "),a("li",[a("code",[s._v("unsafe-eval")]),s._v("：允许将字符串代码执行，比如使用"),a("code",[s._v("eval")]),s._v("、"),a("code",[s._v("setTimeout")]),s._v("、"),a("code",[s._v("setInterval")]),s._v("和"),a("code",[s._v("Function")]),s._v("等函数。")]),s._v(" "),a("li",[a("code",[s._v("nonce")]),s._v("值：每次http响应都会给客户端发送一个token，页面内嵌的脚本必须有这个token才会被允许执行\n比如："),a("code",[s._v("Content-Security-Policy: script-src 'nonce-EDNnf03nceIOfn39fn3e9h3sdfa'")])])]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[s._v("// 只有明确了这个nonce值才会被执行\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),s._v(" "),a("span",{attrs:{class:"token attr-name"}},[s._v("nonce")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("=")]),s._v("EDNnf03nceIOfn39fn3e9h3sdfa")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{attrs:{class:"token script language-javascript"}},[s._v("\n  "),a("span",{attrs:{class:"token comment"}},[s._v("// some code")]),s._v("\n")]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),a("span",{attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("hash")]),s._v("值：列出允许执行的脚本代码的Hash值，页面内嵌脚本的哈希值只有吻合的情况下，才能执行。")])]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[s._v("// 指定hash值\nContent-Security-Policy: script-src 'sha256-qznLcsROx4GACP2dm0UCKCzCG-HiZ1guq6ZZDob_Tng='\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("只有script标签中内容的hash和指定的相同时才会执行\n所以，只要我们能设置好csp的安全规则，就能从根本上避免xss攻击。")]),s._v(" "),a("p",[s._v("更多的关于csp介绍可以看到阮老师的文章："),a("code",[s._v("csp详解")])])])}],!1,null,null,null);e.options.__file="web安全之xss攻击.md";t.default=e.exports}}]);