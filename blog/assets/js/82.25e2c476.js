(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{208:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",[t._v("Node和NodePath")]),t._v(" "),a("p",[a("code",[t._v("babel")]),t._v("编译代码的第一阶段就是将源码解析为抽象语法树。或许你不了解什么是抽象语法树，但你一定清楚什么是"),a("code",[t._v("DOM")]),t._v("树。浏览器在渲染"),a("code",[t._v("html")]),t._v("文件的时候，也会有一个解析的过程--将"),a("code",[t._v("html")]),t._v("文件转换为"),a("code",[t._v("DOM")]),t._v("树结构。所以，"),a("code",[t._v("DOM")]),t._v("树其实是你"),a("code",[t._v("html")]),t._v("文件的结构化表示，每一个"),a("code",[t._v("html")]),t._v("标签都对应"),a("code",[t._v("DOM")]),t._v("树中的一个节点，每一种节点都对应一种特定的类型。"),a("code",[t._v("DOM")]),t._v("树中各节点之间有着千丝万缕的联系，一个节点可能会有父节点，也可能会有兄弟节点，当然，也可能会有子节点。浏览器给我们提供了强大的操作"),a("code",[t._v("DOM")]),t._v("的方法，你可以对"),a("code",[t._v("DOM")]),t._v("树中的任意节点进行增删改查。明白了这些，我们就可以类比一下抽象语法树。首先，我们应该清楚，"),a("code",[t._v("javascript")]),t._v("解析器，比如"),a("code",[t._v("babel")]),t._v("会将我们的源代码转换为抽象语法树，所以，我们也可以认为抽象语法树是对你"),a("code",[t._v("javascript")]),t._v("文件的一种结构化表示，"),a("code",[t._v("javascript")]),t._v("代码中的每一种语法都对应抽象语法树中的一个节点，同样，每一个节点("),a("code",[t._v("Node")]),t._v(")也有一种特定的类型。抽象语法树中的各节点之间也是有着千丝万缕的联系，同样会有父节点，兄弟节点或者子节点。而且，抽象语法树也有很多操作其节点的方法，你也可以对节点进行增删改查。")]),t._v(" "),a("p",[t._v("现在你应该对抽象语法树有了一个简单的概念，下面我们就通过和"),a("code",[t._v("DOM")]),t._v("树类比的方式来了解一下抽象语法树相关的内容。")]),t._v(" "),a("h2",{attrs:{id:"节点-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点-node","aria-hidden":"true"}},[t._v("#")]),t._v(" 节点(Node)")]),t._v(" "),a("p",[t._v("首先我们来直观感受下抽象语法树，假设我们有如下代码")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" parse "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/parser'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sourceCode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`\n  function sum(a, b) {\n    return a + b\n  }\n`")])]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ast "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceCode"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("我们可以直接使用"),a("code",[t._v("@babel/parser")]),t._v("将"),a("code",[t._v("javascript")]),t._v("代码解析成抽象语法树。打印出来的格式如下")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Node {\n  type: 'File',\n  start: 0,\n  end: 45,\n  loc: \n   SourceLocation {\n     start: Position { line: 1, column: 0 },\n     end: Position { line: 5, column: 0 } },\n  errors: [],\n  program: \n   Node {\n     type: 'Program',\n     start: 0,\n     end: 45,\n     loc: SourceLocation { start: [Object], end: [Object] },\n     sourceType: 'script',\n     interpreter: null,\n     body: [ [Object] ],\n     directives: [] },\n  comments: [] }\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])]),a("blockquote",[a("p",[t._v("有些内容在打印的时候被折叠了，我们先不用关心，我们主要是看一下抽象语法树的结构。")])]),t._v(" "),a("p",[t._v("正如"),a("code",[t._v("DOM")]),t._v("树结构会有一个根节点，抽象语法树也存在一个根节点，这个节点的类型是"),a("code",[t._v("File")]),t._v("。前面我们提到过"),a("code",[t._v("DOM")]),t._v("树中的每一个节点都有一种类型，我们可以通过节点的"),a("code",[t._v("nodeType")]),t._v("属性获取。抽象语法树中的节点也有特定的类型，比如上面的"),a("code",[t._v("File")]),t._v("，"),a("code",[t._v("Program")]),t._v("等。下面是完整的类型列表")]),t._v(" "),a("blockquote",[a("p",[t._v("你可以在@babel/types的index.d.ts中查看")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" type Node "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" AnyTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ArgumentPlaceholder "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ArrayExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ArrayPattern "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ArrayTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ArrowFunctionExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" AssignmentExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" AssignmentPattern "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" AwaitExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" BigIntLiteral "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Binary "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" BinaryExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" BindExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Block "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" BlockParent "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" BlockStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" BooleanLiteral "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" BooleanLiteralTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" BooleanTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" BreakStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" CallExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" CatchClause "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Class "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ClassBody "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ClassDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ClassExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ClassImplements "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ClassMethod "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ClassPrivateMethod "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ClassPrivateProperty "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ClassProperty "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" CompletionStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Conditional "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ConditionalExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ContinueStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DebuggerStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Declaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DeclareClass "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DeclareExportAllDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DeclareExportDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DeclareFunction "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DeclareInterface "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DeclareModule "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DeclareModuleExports "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DeclareOpaqueType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DeclareTypeAlias "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DeclareVariable "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DeclaredPredicate "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Decorator "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Directive "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DirectiveLiteral "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DoExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" DoWhileStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EmptyStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EmptyTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EnumBody "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EnumBooleanBody "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EnumBooleanMember "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EnumDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EnumDefaultedMember "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EnumMember "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EnumNumberBody "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EnumNumberMember "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EnumStringBody "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EnumStringMember "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" EnumSymbolBody "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ExistsTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ExportAllDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ExportDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ExportDefaultDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ExportDefaultSpecifier "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ExportNamedDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ExportNamespaceSpecifier "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ExportSpecifier "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Expression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ExpressionStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ExpressionWrapper "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" File "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Flow "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" FlowBaseAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" FlowDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" FlowPredicate "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" FlowType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" For "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ForInStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ForOfStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ForStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ForXStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Function "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" FunctionDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" FunctionExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" FunctionParent "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" FunctionTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" FunctionTypeParam "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" GenericTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Identifier "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" IfStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Immutable "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Import "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ImportDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ImportDefaultSpecifier "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ImportNamespaceSpecifier "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ImportSpecifier "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" InferredPredicate "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" InterfaceDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" InterfaceExtends "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" InterfaceTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" InterpreterDirective "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" IntersectionTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("JSX")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXAttribute "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXClosingElement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXClosingFragment "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXElement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXEmptyExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXExpressionContainer "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXFragment "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXIdentifier "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXMemberExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXNamespacedName "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXOpeningElement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXOpeningFragment "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXSpreadAttribute "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXSpreadChild "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JSXText "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" LVal "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" LabeledStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Literal "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" LogicalExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Loop "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" MemberExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" MetaProperty "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Method "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" MixedTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ModuleDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ModuleSpecifier "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" NewExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Noop "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" NullLiteral "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" NullLiteralTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" NullableTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" NumberLiteral "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" NumberLiteralTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" NumberTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" NumericLiteral "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ObjectExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ObjectMember "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ObjectMethod "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ObjectPattern "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ObjectProperty "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ObjectTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ObjectTypeCallProperty "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ObjectTypeIndexer "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ObjectTypeInternalSlot "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ObjectTypeProperty "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ObjectTypeSpreadProperty "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" OpaqueType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" OptionalCallExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" OptionalMemberExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ParenthesizedExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Pattern "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" PatternLike "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" PipelineBareFunction "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" PipelinePrimaryTopicReference "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" PipelineTopicExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Placeholder "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Private "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" PrivateName "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Program "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Property "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Pureish "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" QualifiedTypeIdentifier "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" RegExpLiteral "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" RegexLiteral "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" RestElement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" RestProperty "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ReturnStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Scopable "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" SequenceExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" SpreadElement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" SpreadProperty "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Statement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" StringLiteral "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" StringLiteralTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" StringTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Super "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" SwitchCase "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" SwitchStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSAnyKeyword "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSArrayType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSAsExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSBigIntKeyword "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSBooleanKeyword "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSCallSignatureDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSConditionalType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSConstructSignatureDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSConstructorType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSDeclareFunction "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSDeclareMethod "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSEntityName "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSEnumDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSEnumMember "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSExportAssignment "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSExpressionWithTypeArguments "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSExternalModuleReference "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSFunctionType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSImportEqualsDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSImportType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSIndexSignature "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSIndexedAccessType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSInferType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSInterfaceBody "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSInterfaceDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSIntersectionType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSLiteralType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSMappedType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSMethodSignature "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSModuleBlock "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSModuleDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSNamespaceExportDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSNeverKeyword "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSNonNullExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSNullKeyword "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSNumberKeyword "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSObjectKeyword "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSOptionalType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSParameterProperty "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSParenthesizedType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSPropertySignature "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSQualifiedName "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSRestType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSStringKeyword "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSSymbolKeyword "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSThisType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTupleType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTypeAliasDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTypeAssertion "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTypeElement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTypeLiteral "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTypeOperator "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTypeParameter "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTypeParameterDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTypeParameterInstantiation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTypePredicate "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTypeQuery "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSTypeReference "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSUndefinedKeyword "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSUnionType "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSUnknownKeyword "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TSVoidKeyword "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TaggedTemplateExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TemplateElement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TemplateLiteral "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Terminatorless "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ThisExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ThisTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" ThrowStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TryStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TupleTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TypeAlias "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TypeCastExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TypeParameter "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TypeParameterDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TypeParameterInstantiation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" TypeofTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" UnaryExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" UnaryLike "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" UnionTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" UpdateExpression "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" UserWhitespacable "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" V8IntrinsicIdentifier "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" VariableDeclaration "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" VariableDeclarator "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Variance "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" VoidTypeAnnotation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" While "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" WhileStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" WithStatement "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" YieldExpression"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("blockquote",[a("p",[t._v("每一种类型的节点都对应javascript中的一种语法")])]),t._v(" "),a("p",[a("code",[t._v("DOM")]),t._v("树中的每一个节点都有不同的属性，不同的节点具有的类型也可能是不一样的。一般的元素节点都有"),a("code",[t._v("innerHTML")]),t._v("属性可以用来获取其"),a("code",[t._v("html")]),t._v("结构，表单元素会有"),a("code",[t._v("value")]),t._v("属性，可以用来获取其值。同样，抽象语法树中的节点也有相应的属性，不同的节点也是不一样的。")]),t._v(" "),a("p",[t._v("比如，"),a("code",[t._v("File")]),t._v("类型具有的属性有")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("File")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("BaseNode")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"File"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  program"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Program"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  comments"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" any"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  tokens"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" any"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("这里也值得一说的就是抽象语法树中的节点都继承自"),a("code",[t._v("BaseNode")]),t._v("这种节点，所以，每个节点都包含如下共有属性")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("BaseNode")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  leadingComments"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReadonlyArray"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("Comment"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  innerComments"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReadonlyArray"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("Comment"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  trailingComments"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReadonlyArray"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("Comment"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  start"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  end"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  loc"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SourceLocation "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  type"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Node"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"type"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("其次，我们是不是能够像获取"),a("code",[t._v("DOM")]),t._v("节点数据那样直接获取抽象语法树某个节点的属性呢，当然是可以的。比如")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("program"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("上面获取的就是源代码中"),a("code",[t._v("sum")]),t._v("函数的第一个参数的名称。既然能够获取，我们是不是也能修改抽象语法树某个节点的属性呢？当然也是可以的，比如我们把"),a("code",[t._v("sum")]),t._v("函数的第一个参数的名称改为"),a("code",[t._v("c")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" parse "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/parser'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" generate "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/generator'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sourceCode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`\n  function sum(a, b) {\n    return a + b\n  }\n`")])]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ast "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceCode"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nast"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("program"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'c'")]),t._v("\n\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token function"}},[t._v("generate")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("p",[t._v("输入如下")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" code"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'function sum(c, b) {\\n  return a + b;\\n}'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  map"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  rawMappings"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("从输出代码中可以看出"),a("code",[t._v("sum")]),t._v("函数的第一个参数的名称被我们修改了。")]),t._v(" "),a("blockquote",[a("p",[t._v("修改抽象语法树你可以直接通过修改抽象语法树中的某些节点的属性来完成，也可以通过我们下面即将介绍的NodePath对象来完成。")])]),t._v(" "),a("h2",{attrs:{id:"nodepath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodepath","aria-hidden":"true"}},[t._v("#")]),t._v(" NodePath")]),t._v(" "),a("p",[t._v("上面通过将抽象语法树和"),a("code",[t._v("DOM")]),t._v("树进行类比，我们大概清楚了抽象语法树是一个什么东西。同时，我们也可以通过对抽象语法树中节点的操作对抽象语法树进行简单的增删改查等功能。我们回头想一下，我们在实际的项目开发中，如果直接调用"),a("code",[t._v("DOM")]),t._v("相关的"),a("code",[t._v("api")]),t._v("完成对"),a("code",[t._v("DOM")]),t._v("树操作，是不是一件十分麻烦的事情。为了能够更容易的操作"),a("code",[t._v("DOM")]),t._v("节点，我们是不是可以借助"),a("code",[t._v("jquery")]),t._v("等类库简化我们的操作。同样的，如果我们对抽象语法树的变更都是通过直接操作抽象语法树中的节点来完成，这同样是一件很麻烦的事情。幸运的是，当我们对抽象语法树进行遍历的过程中，"),a("code",[t._v("babel")]),t._v("给我们提供了"),a("code",[t._v("NodePath")]),t._v("对象来简化我们对抽象语法树节点的操作。")]),t._v(" "),a("p",[t._v("当我们通过"),a("code",[t._v("@babel/traverse")]),t._v("遍历抽象语法树的时候，"),a("code",[t._v("traverse")]),t._v("的第二个参数接收一个"),a("code",[t._v("visitor")]),t._v("对象。对象的方法名都是上面提到的抽象语法树的节点的类型，当"),a("code",[t._v("traverse")]),t._v("遍历到相关节点的时候，会自动调用"),a("code",[t._v("visitor")]),t._v("对象中和其类型同名的方法的名称，并自动将该节点对应的"),a("code",[t._v("NodePath")]),t._v("对象传进去，我们可以利用这个"),a("code",[t._v("NodePath")]),t._v("对象对当前节点进行操作。")]),t._v(" "),a("p",[t._v("比如，在下面的代码中我们就可以获取到"),a("code",[t._v("FunctionDeclaration")]),t._v("节点对应的"),a("code",[t._v("NodePath")]),t._v("对象")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("traverse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("FunctionDeclaration")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("所以我们可以使用"),a("code",[t._v("NodePath")]),t._v("对象来完成将参数"),a("code",[t._v("c")]),t._v("重命名为"),a("code",[t._v("a")]),t._v("的功能")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" parse "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/parser'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" generate "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/generator'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" traverse "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/traverse'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sourceCode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`\n  function sum(a, b) {\n    return a + b\n  }\n`")])]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ast "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceCode"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("traverse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("FunctionDeclaration")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'params.0'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'c'")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token function"}},[t._v("generate")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("p",[t._v("了解了"),a("code",[t._v("NodePath")]),t._v("是什么，下面我们就来看一下这个对象给我们提供了哪些便捷的方式来操作抽象语法树的节点的。")]),t._v(" "),a("blockquote",[a("p",[t._v("关于"),a("code",[t._v("NodePath")]),t._v("对象的定义可以查看"),a("code",[t._v("@types/babel__traverse/index.d.ts")])])]),t._v(" "),a("p",[t._v("关于"),a("code",[t._v("NodePath")]),t._v("我们同样可以从其"),a("code",[t._v(".d.ts")]),t._v("文件中了解其基本的属性和方法。")]),t._v(" "),a("p",[a("code",[t._v("NodePath")]),t._v("对象上的属性和方法可以分为如下四种：")]),t._v(" "),a("ul",[a("li",[t._v("基本的属性---用于获取抽象语法树中节点的信息")]),t._v(" "),a("li",[t._v("核心操作方法---用于操作抽象语法树中的节点")]),t._v(" "),a("li",[a("code",[t._v("isXXX")]),t._v("系列方法---用于判断抽象语法树中节点类型")]),t._v(" "),a("li",[a("code",[t._v("assert")]),t._v("等断言系列方法---对抽象语法树中节点信息进行断言的方法")])]),t._v(" "),a("p",[t._v("下面我们就看几个属性和方法来了解一下它的基本使用")]),t._v(" "),a("blockquote",[a("p",[t._v("以下NodePath简称为path")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("path.node")]),t._v("：获取当前"),a("code",[t._v("NodePath")]),t._v("对象原生的"),a("code",[t._v("Node")]),t._v("节点")]),t._v(" "),a("li",[a("code",[t._v("path.parent")]),t._v("：获取父节点的"),a("code",[t._v("NodePath")]),t._v("对象")]),t._v(" "),a("li",[a("code",[t._v("path.parentNode")]),t._v("：获取当前"),a("code",[t._v("NodePath")]),t._v("对象原生的"),a("code",[t._v("Node")]),t._v("节点的父节点")]),t._v(" "),a("li",[a("code",[t._v("path.context")]),t._v("：获取当前"),a("code",[t._v("NodePath")]),t._v("所在的上下文对象")]),t._v(" "),a("li",[a("code",[t._v("path.contexts")]),t._v("：获取当前"),a("code",[t._v("NodePath")]),t._v("所在的上下文对象链")]),t._v(" "),a("li",[a("code",[t._v("path.scope")]),t._v("：当前节点所在的作用域对象")]),t._v(" "),a("li",[a("code",[t._v("path.getScope()")]),t._v("：获取当前节点所在的作用域对象。"),a("code",[t._v("path.getScope() === path.scope")])])]),t._v(" "),a("blockquote",[a("p",[t._v("关于作用域"),a("code",[t._v("Scope")]),t._v("，后面我们会一起探讨")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("path.traverse()")]),t._v("：对当前节点进行遍历")]),t._v(" "),a("li",[a("code",[t._v("path.replaceWith()")]),t._v("：用一个节点取代另一个节点")]),t._v(" "),a("li",[a("code",[t._v("path.evaluateTruthy()")]),t._v("：当前节点是否可计算")]),t._v(" "),a("li",[a("code",[t._v("path.evaluate()")]),t._v("：计算当前节点")]),t._v(" "),a("li",[a("code",[t._v("path.remove()")]),t._v("：移除当前节点")])]),t._v(" "),a("blockquote",[a("p",[t._v("更多的方法可以参考"),a("code",[t._v("@types/babel__traverse/index.d.ts")]),t._v("中关于"),a("code",[t._v("NodePath")]),t._v("的定义")])]),t._v(" "),a("p",[t._v("知道了上面一些"),a("code",[t._v("NodePath")]),t._v("的属性和方法，我们来看几个小例子：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("去除没有使用到的代码")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" parse "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/parser'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" traverse "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/traverse'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sourceCode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`\n  import m,{c} from 'modulec'\n  var a = 123\n  var b = 234\n  const d = 'd'\n  let e = 'e'\n\n  function sayA() {\n    // console.log(m)\n    // console.log(m)\n    return () => a\n  }\n\n  sayA()\n`")])]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ast "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceCode"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  sourceType"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'module'")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" kinds "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v("'var'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'let'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'const'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'module'")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("traverse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("Program")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bindings "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scope"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bindings\n    Object"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("keys")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bindings"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("forEach")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" binding "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" bindings"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" kind "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" bindings"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kind\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kinds"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("includes")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kind"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("binding"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("referenced"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          binding"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("remove")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kind "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'module'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" parentPath "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" binding"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentPath\n          "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parentPath"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("isImportDeclaration")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" specifiers "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" parentPath"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("specifiers\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("specifiers "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" specifiers"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              parentPath"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("remove")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br")])]),a("p",[t._v("上面这个demo的实现思路也很简单，首先判断声明的变量是否被引用过，如果没有被引用过，就可以直接移除。需要额外注意的一点就是，对于从模块中引入的变量，除了要判断这个变量本身是否被使用过，也要判断下该模块是否有变量被引入了。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("实现求幂运算符")])])]),t._v(" "),a("blockquote",[a("p",[t._v("求幂运算符"),a("code",[t._v("**")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" parse "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/parser'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" traverse "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/traverse'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" t "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/types'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sourceCode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`\n  const a = 2**50\n`")])]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ast "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceCode"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  sourceType"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'module'")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("traverse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("BinaryExpression")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("operator "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'**'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" leftValue "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rightValue "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n      "),a("span",{attrs:{class:"token comment"}},[t._v("// 也可以直接通过这种方式处理，但是不推荐")]),t._v("\n      "),a("span",{attrs:{class:"token comment"}},[t._v("// path.replaceWithSourceString(`Math.pow(${leftValue}, ${rightValue})`)")]),t._v("\n      path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("replaceWith")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("callExpression")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("memberExpression")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("identifier")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Math'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("identifier")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'pow'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("numericLiteral")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leftValue"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("numericLiteral")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rightValue"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br")])]),a("ul",[a("li",[a("strong",[t._v("编译箭头函数")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" parse "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/parser'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" traverse "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/traverse'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" t "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/types'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sourceCode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`\nconst picker = (a, b) => {\n\tif (a > b) {\n    \treturn a - b\n    }\n\n  \treturn a + b\n}\n\nconst sum = (a, b, c, d, e) => a + b + c * d / e\n`")])]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ast "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceCode"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  sourceType"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'module'")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("traverse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("ArrowFunctionExpression")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" parent "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentPath"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fnName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" anchor "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("findParent")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" p"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("isVariableDeclaration")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("isBlockStatement")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      anchor"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("replaceWith")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("functionDeclaration")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("identifier")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fnName"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    anchor"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("replaceWith")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("functionDeclaration")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("identifier")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fnName"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("blockStatement")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            t"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("returnStatement")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n              node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body\n            "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br")])]),a("h2",{attrs:{id:"作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),a("p",[a("code",[t._v("javascript")]),t._v("引擎执行"),a("code",[t._v("javascript")]),t._v("代码之前会先对源代码进行编译(注：此编译非"),a("code",[t._v("babel")]),t._v("编译)。"),a("code",[t._v("javascript")]),t._v("代码经过编译后会生成两部分："),a("strong",[t._v("执行上下文")]),t._v("和"),a("strong",[t._v("可执行代码")]),t._v("，执行上下文中包含了当前作用域的语法环境(保存变量声明和函数声明)和词法环境(保存块级作用域变量)。"),a("code",[t._v("babel")]),t._v("在编译"),a("code",[t._v("javascript")]),t._v("代码的时候也会生成作用域相关的概念，作用域中也含了该作用域下声明的变量和块级作用域。"),a("code",[t._v("babel")]),t._v("的作用域对象用"),a("code",[t._v("Scope")]),t._v("表示，我们可以通过"),a("code",[t._v("NodePath.scope")]),t._v("或者"),a("code",[t._v("NodePath.getScope()")]),t._v("获取当前节点所处的作用域对象。")]),t._v(" "),a("p",[t._v("下面我们来看一下和作用域相关的一些比较常用的属性和方法。")]),t._v(" "),a("blockquote",[a("p",[t._v("作用域对象定义在"),a("code",[t._v("@types/babel__traverse/index.d.ts")]),t._v("的"),a("code",[t._v("Scope")]),t._v("中")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("scope.path")]),t._v("：获取调用"),a("code",[t._v("scope")]),t._v("属性的"),a("code",[t._v("NodePath")]),t._v("对象，"),a("code",[t._v("NodePath.scope.path === NodePath")])]),t._v(" "),a("li",[a("code",[t._v("scope.block")]),t._v("：获取调用"),a("code",[t._v("scope")]),t._v("属性的"),a("code",[t._v("NodePath")]),t._v("对象的节点，"),a("code",[t._v("NodePath.node === NodePath.scope.block")])]),t._v(" "),a("li",[a("code",[t._v("scope.parentBlock")]),t._v("：获取调用"),a("code",[t._v("scope")]),t._v("属性的"),a("code",[t._v("NodePath")]),t._v("对象的节点的父节点，"),a("code",[t._v("NodePath.parent === NodePath.scope.parentBlock")])]),t._v(" "),a("li",[a("code",[t._v("scope.parent")]),t._v("：获取当前作用域对象的父作用域对象。")]),t._v(" "),a("li",[a("code",[t._v("scope.bindings")]),t._v("：获取在当前作用域下声明的变量，函数或者模块。")])]),t._v(" "),a("blockquote",[a("p",[t._v("这个对象的每个成员的值都是"),a("code",[t._v("Binding")]),t._v("对象的实例，关于"),a("code",[t._v("Binding")]),t._v("后面会一起探讨")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("scope.traverse()")]),t._v("：在当前作用域和"),a("code",[t._v("NodePath")]),t._v("下遍历节点")]),t._v(" "),a("li",[a("code",[t._v("scope.generateDeclaredUidIdentifier()")]),t._v("：创建一个唯一的标示符并将其添加到当前作用域下("),a("strong",[t._v("慎用哈哈哈")]),t._v(")")]),t._v(" "),a("li",[a("code",[t._v("scope.generateUidIdentifier()")]),t._v("：创建一个唯一的标示符，返回值是"),a("code",[t._v("t.Identifier")])]),t._v(" "),a("li",[a("code",[t._v("scope.generateUid()")]),t._v("：创建一个唯一的标示符，返回值是"),a("code",[t._v("string")])]),t._v(" "),a("li",[a("code",[t._v("scope.generateUidIdentifierBasedOnNode()")]),t._v("：以当前节点为基准创建一个唯一的标示符")]),t._v(" "),a("li",[a("code",[t._v("scope.rename()")]),t._v("：对当前作用域下声明的某个变量进行命名")]),t._v(" "),a("li",[a("code",[t._v("scope.hasReference()")]),t._v("：判断某个变量名是否在当前作用域下定义")]),t._v(" "),a("li",[a("code",[t._v("scope.hasGlobal()")]),t._v("：判断某个变量是否在全局作用域下定义")]),t._v(" "),a("li",[a("code",[t._v("scope.getAllBindings()")]),t._v("：从当前作用域开始，返回当前作用域链上的所有"),a("code",[t._v("bindings")])]),t._v(" "),a("li",[a("code",[t._v("scope.getBinding()")]),t._v("：获取某个变量的"),a("code",[t._v("binding")]),t._v("对象，会向上查找作用域链")]),t._v(" "),a("li",[a("code",[t._v("scope.getOwnBinding()")]),t._v("：只获取当前作用域下声明的变量")]),t._v(" "),a("li",[a("code",[t._v("scope.getOwnBindingIdentifier()")]),t._v("：只在当前作用域下获取某个变量的定义")]),t._v(" "),a("li",[a("code",[t._v("scope.hasOwnBinding()")]),t._v("：判断某个变量是否在当前作用下定义")]),t._v(" "),a("li",[a("code",[t._v("scope.hasBinding()")]),t._v("：判断某个变量是否在当前作用域链(也会检查父作用域链)")]),t._v(" "),a("li",[a("code",[t._v("scope.parentHasBinding()")]),t._v("：判断某个变量是否在父作用域中声明")]),t._v(" "),a("li",[a("code",[t._v("scope.moveBindingTo()")]),t._v("：移动某个变量的声明到另一个作用域中")]),t._v(" "),a("li",[a("code",[t._v("scope.removeOwnBinding()")]),t._v("：将某个变量从当前作用域中移除")]),t._v(" "),a("li",[a("code",[t._v("scope.removeBinding()")]),t._v("：将某个变量从当前作用域链中移除")])]),t._v(" "),a("p",[t._v("作用域对象中的"),a("code",[t._v("bindings")]),t._v("属性包含了当前当前作用域中声明的所有变量。下面是关于"),a("code",[t._v("binding")]),t._v("的一些属性。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Binding")]),t._v("的定义在"),a("code",[t._v("@types/babel__traverse/index.d.ts")]),t._v("的"),a("code",[t._v("Binding")]),t._v("中")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("binding.identifier")]),t._v("：获取某个参数名称的"),a("code",[t._v("identifier")]),t._v("表示")]),t._v(" "),a("li",[a("code",[t._v("binding.scope")]),t._v("：获取该变量所在的"),a("code",[t._v("scope")]),t._v("。"),a("code",[t._v("binding.scope === NodePath.scope")])]),t._v(" "),a("li",[a("code",[t._v("binding.path")]),t._v("：获取该变量所在的"),a("code",[t._v("NodePath")]),t._v("。"),a("code",[t._v("binding.path === NodePath")])]),t._v(" "),a("li",[a("code",[t._v("binding.kind")]),t._v("：获取定义该变量的时候所使用的类型。"),a("code",[t._v('"var" | "let" | "const" | "module"')])]),t._v(" "),a("li",[a("code",[t._v("binding.referenced")]),t._v("：该变量是否被使用过")]),t._v(" "),a("li",[a("code",[t._v("binding.references")]),t._v("：该变量被使用的次数")]),t._v(" "),a("li",[a("code",[t._v("binding.referencePaths")]),t._v("：使用该变量的"),a("code",[t._v("NodePath")]),t._v("对象集合")]),t._v(" "),a("li",[a("code",[t._v("binding.constant")]),t._v("：如果一个变量没有被重新赋值过则为"),a("code",[t._v("true")]),t._v("，否则为"),a("code",[t._v("false")])]),t._v(" "),a("li",[a("code",[t._v("binding.constantViolations")]),t._v("：为变量复制的语句所在的"),a("code",[t._v("NodePath")]),t._v("对象")])]),t._v(" "),a("p",[t._v("了解了关于作用域的相关内容，我们再来看几个小"),a("code",[t._v("demo")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("参数重命名")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" parse "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/parser'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" traverse "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/traverse'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sourceCode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`\nfunction picker(a, b) {\n  return a + b\n}\n`")])]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ast "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceCode"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("traverse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("FunctionDeclaration")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" scope "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scope\n      node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("forEach")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        scope"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("rename")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" scope"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("generateUid")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("ul",[a("li",[a("strong",[t._v("参数重命名的另一种方法")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" parse "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/parser'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" traverse "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'@babel/traverse'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sourceCode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token template-string"}},[a("span",{attrs:{class:"token string"}},[t._v("`\nfunction picker(a, b, c) {\n  console.log(b)\n  return a + b\n}\n`")])]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ast "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("parse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceCode"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("traverse")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("FunctionDeclaration")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node\n    node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("forEach")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" param\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" binding "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scope"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bindings"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" uid "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scope"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("generateUid")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token comment"}},[t._v("// 参数重命名")]),t._v("\n      param"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" uid\n\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("binding "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" binding"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("referencePaths"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        binding"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("referencePaths"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("forEach")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" node "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" uid\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br")])]),a("p",[t._v("了解了这么多，我们就能开发基本的"),a("code",[t._v("babel")]),t._v("插件了，后面我们就用上面了解到的属性和方法进行"),a("code",[t._v("babel")]),t._v("插件的开发。")])])}],!1,null,null,null);e.options.__file="Node和NodePath.md";s.default=e.exports}}]);